[2018-06-22 14:25:59.819][main][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3f6b0be5: startup date [Fri Jun 22 14:25:59 CST 2018]; root of context hierarchy
[2018-06-22 14:26:00.136][main][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:26:00.180][main][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3923a01a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:26:00.493][main][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:26:00.516][main][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da05287: startup date [Fri Jun 22 14:26:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f6b0be5
[2018-06-22 14:26:01.156][main][ERROR]org.springframework.boot.SpringApplication[842]-Application run failed
java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration.propertySourcesPlaceholderConfigurer
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:64)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:179)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:141)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@659e0bfd]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:724)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:633)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1012)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:164)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanType(BeanTypeRegistry.java:153)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:203)
	at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getNamesForType(BeanTypeRegistry.java:115)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:265)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:254)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:196)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:116)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 17 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:641)
	... 34 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 38 common frames omitted
[2018-06-22 14:26:01.171][main][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da05287: startup date [Fri Jun 22 14:26:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f6b0be5
[2018-06-22 14:26:01.173][main][WARN ]org.springframework.boot.SpringApplication[823]-Unable to close ApplicationContext
java.lang.IllegalStateException: Failed to introspect Class [org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@659e0bfd]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:659)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:556)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:541)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:724)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:633)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:511)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:503)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1198)
	at org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:889)
	at org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:875)
	at org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:861)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:810)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
Caused by: java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:641)
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 24 common frames omitted
[2018-06-22 14:27:25.635][main][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52af26ee: startup date [Fri Jun 22 14:27:25 CST 2018]; root of context hierarchy
[2018-06-22 14:27:25.986][main][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:27:26.029][main][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cd2b49b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:27:26.331][main][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:27:26.352][main][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49d3c823: startup date [Fri Jun 22 14:27:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52af26ee
[2018-06-22 14:27:28.352][main][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=79731bb9-1a12-3edb-bbda-25cc24c3118f
[2018-06-22 14:27:28.442][main][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:27:29.199][main][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cd2b49b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:27:29.813][main][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:27:29.829][main][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:27:29.850][main][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:27:29.850][main][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:27:29.862][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\ProgramData\Java\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin/client;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/lib/i386;D:\ProgramData\Java\jdk8\bin;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;C:\Android;C:\Windows\System32;D:\ProgramData\apache-maven-3.5.0\bin;E:\android\SDK\tools;E:\android\SDK\platform-tools;D:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\ProgramData\gradle-4.7\bin;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\nodejs\;D:\ProgramData\python;D:\ProgramData\python\Scripts\;D:\ProgramData\python\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Roaming\npm;D:\ProgramData\Myeclipse2017;;.]
[2018-06-22 14:27:30.061][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:27:30.062][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 3711 ms
[2018-06-22 14:27:30.568][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:27:30.569][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:27:30.594][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4032c789
[2018-06-22 14:27:32.629][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:27:32.630][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:27:32.631][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:27:32.631][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:27:32.632][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:27:32.632][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:27:32.632][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean[244]-Mapping filter: 'springSecurityFilterChain' to: [/*]
[2018-06-22 14:27:32.633][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:27:32.633][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:27:32.633][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:27:32.926][main][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:27:32.926][main][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:27:33.114][main][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:27:33.294][main][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49d3c823: startup date [Fri Jun 22 14:27:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52af26ee
[2018-06-22 14:27:33.397][main][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:27:33.401][main][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:27:33.403][main][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:27:33.491][main][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:27:33.492][main][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:27:35.191][main][INFO ]org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration[84]-

Using generated security password: 68a8134c-e9ea-4b68-af2e-f20a586aae00

[2018-06-22 14:27:35.545][main][INFO ]org.springframework.security.web.DefaultSecurityFilterChain[43]-Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b4086c1, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c1503a3, org.springframework.security.web.header.HeaderWriterFilter@18709cb2, org.springframework.security.web.csrf.CsrfFilter@486e9d1d, org.springframework.security.web.authentication.logout.LogoutFilter@1f884bd6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@527a8665, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@517704, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7b14c61, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49671897, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4026461d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58aa1d72, org.springframework.security.web.session.SessionManagementFilter@4b87760e, org.springframework.security.web.access.ExceptionTranslationFilter@3dbd7107, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@764fffa0]
[2018-06-22 14:27:36.195][main][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:27:36.212][main][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:27:36.214][main][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:27:36.215][main][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:27:36.332][main][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:27:36.350][main][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:27:36.354][main][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:27:36.358][main][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:27:36.364][main][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:27:36.374][main][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:27:36.391][main][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=49d3c823,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:27:36.432][main][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:27:36.447][main][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:27:36.545][main][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:27:37.016][main][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:27:37.016][main][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:27:37.195][main][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:27:37.196][main][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:27:37.393][main][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:27:37.466][main][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:27:37.467][main][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:27:37.467][main][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:27:37.468][main][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:27:37.469][main][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:27:37.470][main][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:27:37.470][main][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:27:37.843][main][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:27:37.846][main][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:27:37.849][main][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:27:37.853][main][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529648857852 with initial instances count: 0
[2018-06-22 14:27:37.865][main][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:27:37.867][main][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529648857867, current=UP, previous=STARTING]
[2018-06-22 14:27:37.869][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:27:38.218][main][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:27:38.267][main][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:27:38.382][main][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 14:27:38.384][main][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:27:38.387][main][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 13.588 seconds (JVM running for 14.411)
[2018-06-22 14:27:38.392][main][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:27:38.623][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:27:47.683][http-nio-8020-exec-10][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 14:27:47.683][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 14:27:47.736][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
[2018-06-22 14:28:07.851][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:28:07.851][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:28:07.851][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:28:07.851][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:28:07.853][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:28:07.854][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: false
[2018-06-22 14:28:07.854][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:28:07.929][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:29:03.436][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d68d28e: startup date [Fri Jun 22 14:29:03 CST 2018]; root of context hierarchy
[2018-06-22 14:29:03.951][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:29:04.042][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$100b829f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:29:04.451][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:29:04.477][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b2543eb: startup date [Fri Jun 22 14:29:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d68d28e
[2018-06-22 14:29:06.901][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:29:06.961][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:29:07.679][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$100b829f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:29:08.464][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:29:08.478][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:29:08.489][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:29:08.489][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:29:08.498][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\ProgramData\Java\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin/client;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/lib/i386;D:\ProgramData\Java\jdk8\bin;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;C:\Android;C:\Windows\System32;D:\ProgramData\apache-maven-3.5.0\bin;E:\android\SDK\tools;E:\android\SDK\platform-tools;D:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\ProgramData\gradle-4.7\bin;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\nodejs\;D:\ProgramData\python;D:\ProgramData\python\Scripts\;D:\ProgramData\python\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Roaming\npm;D:\ProgramData\Myeclipse2017;;.]
[2018-06-22 14:29:08.628][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:29:08.629][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 4153 ms
[2018-06-22 14:29:09.229][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:29:09.230][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:29:09.251][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5528cc8b
[2018-06-22 14:29:12.115][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:29:12.115][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:29:12.115][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:29:12.116][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:29:12.116][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:29:12.116][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:29:12.116][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:29:12.116][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:29:12.116][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:29:12.356][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:29:12.357][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:29:12.543][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:29:12.685][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b2543eb: startup date [Fri Jun 22 14:29:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d68d28e
[2018-06-22 14:29:12.843][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:29:12.846][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:29:12.847][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:29:12.912][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:29:12.913][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:29:13.855][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:29:14.368][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 14:29:14.581][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:29:14.596][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:29:14.597][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:29:14.598][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:29:14.719][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:29:14.737][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:29:14.738][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:29:14.740][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:29:14.745][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:29:14.764][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:29:14.787][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5b2543eb,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:29:14.808][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:29:14.824][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:29:14.897][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:29:15.160][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:29:15.161][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:29:15.301][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:29:15.302][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:29:15.510][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:29:15.580][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:29:15.580][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:29:15.580][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:29:15.581][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:29:15.581][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:29:15.581][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:29:15.581][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:29:15.799][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:29:15.802][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:29:15.806][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:29:15.811][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529648955810 with initial instances count: 1
[2018-06-22 14:29:15.824][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:29:15.824][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529648955824, current=UP, previous=STARTING]
[2018-06-22 14:29:15.826][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:29:15.867][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:29:15.871][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:29:15.884][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:29:16.145][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 14:29:16.146][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:29:16.149][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 13.451 seconds (JVM running for 14.238)
[2018-06-22 14:29:16.154][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:29:19.022][http-nio-8020-exec-10][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 14:29:19.023][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 14:29:19.065][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
[2018-06-22 14:30:08.957][Thread-1][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@d68d28e: startup date [Fri Jun 22 14:29:03 CST 2018]; root of context hierarchy
[2018-06-22 14:30:08.958][Thread-1][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b2543eb: startup date [Fri Jun 22 14:29:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d68d28e
[2018-06-22 14:30:08.959][Thread-1][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:30:08.960][Thread-1][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529649008959, current=DOWN, previous=UP]
[2018-06-22 14:30:08.960][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:30:08.963][Thread-1][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:30:08.968][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:30:08.970][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:30:08.971][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:30:08.995][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:30:11.998][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:30:12.015][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:30:12.033][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:30:12.242][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@54f500d9}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:30:12 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b2543eb
[2018-06-22 14:30:12.337][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@54f500d9}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:30:12.358][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@54f500d9}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:30:12.854][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@24e22f22: startup date [Fri Jun 22 14:30:12 CST 2018]; root of context hierarchy
[2018-06-22 14:30:12.870][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:30:12.873][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$100b829f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:30:13.035][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:30:13.038][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d129638: startup date [Fri Jun 22 14:30:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@24e22f22
[2018-06-22 14:30:14.267][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:30:14.280][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:30:14.329][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$100b829f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:30:14.845][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:30:14.846][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:30:14.846][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:30:14.847][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:30:14.884][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:30:14.885][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1847 ms
[2018-06-22 14:30:15.072][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:30:15.073][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:30:15.073][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5708225a
[2018-06-22 14:30:15.985][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:30:15.986][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:30:15.986][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:30:15.986][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:30:15.987][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:30:15.987][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:30:15.987][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:30:15.987][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:30:15.987][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:30:16.051][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:30:16.051][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:30:16.161][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:30:16.243][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d129638: startup date [Fri Jun 22 14:30:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@24e22f22
[2018-06-22 14:30:16.269][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:30:16.271][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:30:16.273][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:30:16.318][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:30:16.319][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:30:16.708][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:30:17.151][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:30:17.155][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:30:17.155][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:30:17.160][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:30:17.320][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:30:17.326][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:30:17.328][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:30:17.329][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:30:17.334][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:30:17.352][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:30:17.356][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2d129638,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:30:17.366][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:30:17.369][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:30:17.377][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:30:17.382][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:30:17.382][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:30:17.383][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:30:17.383][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:30:17.502][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:30:17.528][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:30:17.529][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:30:17.529][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:30:17.529][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:30:17.529][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:30:17.530][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:30:17.530][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:30:17.540][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:30:17.549][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:30:17.550][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:30:17.560][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529649017560 with initial instances count: 1
[2018-06-22 14:30:17.572][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:30:17.574][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529649017574, current=UP, previous=STARTING]
[2018-06-22 14:30:17.576][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:30:17.591][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:30:17.630][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:30:17.633][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:30:17.645][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 14:30:17.646][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:30:17.647][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 4.957 seconds (JVM running for 75.737)
[2018-06-22 14:30:17.652][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:30:17.653][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:30:28.354][Thread-13][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@24e22f22: startup date [Fri Jun 22 14:30:12 CST 2018]; root of context hierarchy
[2018-06-22 14:30:28.355][Thread-13][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d129638: startup date [Fri Jun 22 14:30:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@24e22f22
[2018-06-22 14:30:28.356][Thread-13][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:30:28.356][Thread-13][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529649028356, current=DOWN, previous=UP]
[2018-06-22 14:30:28.357][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:30:28.358][Thread-13][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:30:28.359][Thread-13][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:30:28.359][Thread-13][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:30:28.362][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:30:28.365][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:30:28.366][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:30:28.376][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:30:28.381][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:30:29.263][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@2650d752}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:30:29 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d129638
[2018-06-22 14:30:29.313][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@2650d752}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:30:29.319][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@2650d752}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:30:29.812][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@395370c5: startup date [Fri Jun 22 14:30:29 CST 2018]; root of context hierarchy
[2018-06-22 14:30:29.824][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:30:29.826][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$100b829f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:30:29.947][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:30:29.949][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ff97e16: startup date [Fri Jun 22 14:30:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@395370c5
[2018-06-22 14:30:30.968][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:30:30.974][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:30:31.001][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$100b829f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:30:31.183][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:30:31.184][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:30:31.184][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:30:31.184][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:30:31.211][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:30:31.212][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1263 ms
[2018-06-22 14:30:31.346][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:30:31.346][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:30:31.346][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@89e10fb
[2018-06-22 14:30:31.975][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:30:31.976][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:30:31.976][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:30:31.976][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:30:31.976][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:30:31.977][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:30:31.977][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:30:31.977][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:30:31.977][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:30:32.026][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:30:32.026][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:30:32.105][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:30:32.184][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ff97e16: startup date [Fri Jun 22 14:30:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@395370c5
[2018-06-22 14:30:32.216][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:30:32.217][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:30:32.217][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:30:32.249][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:30:32.250][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:30:32.613][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:30:32.866][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:30:32.868][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:30:32.869][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:30:32.869][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:30:32.912][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:30:32.915][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:30:32.916][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:30:32.916][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:30:32.918][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:30:32.926][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:30:32.930][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7ff97e16,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:30:32.937][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:30:32.939][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:30:32.946][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:30:32.948][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:30:32.948][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:30:32.948][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:30:32.948][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:30:32.993][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:30:32.994][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:30:32.994][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:30:32.995][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:30:32.995][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:30:32.995][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:30:32.995][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:30:32.995][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:30:32.999][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:30:33.000][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:30:33.001][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:30:33.002][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529649033002 with initial instances count: 0
[2018-06-22 14:30:33.007][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:30:33.008][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529649033008, current=UP, previous=STARTING]
[2018-06-22 14:30:33.008][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:30:33.021][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:30:33.020][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:30:33.022][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:30:33.026][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 14:30:33.026][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:30:33.027][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 3.349 seconds (JVM running for 91.117)
[2018-06-22 14:30:33.031][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:30:33.031][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:31:03.003][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:31:03.003][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:31:03.003][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:31:03.003][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:31:03.003][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:31:03.003][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: false
[2018-06-22 14:31:03.003][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:31:03.008][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:34:04.140][http-nio-8020-exec-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 14:34:04.141][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 14:34:04.158][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
[2018-06-22 14:34:44.736][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@737c4ca5}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:34:44 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ff97e16
[2018-06-22 14:34:44.767][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@737c4ca5}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:34:45.032][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@737c4ca5}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 14:34:45.073][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@737c4ca5}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 14:34:45.114][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@737c4ca5}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 14:34:45.125][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@737c4ca5}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 14:34:45.130][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@737c4ca5}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@521eff67
[2018-06-22 14:35:33.003][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:37:56.596][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@693f68cc: startup date [Fri Jun 22 14:37:56 CST 2018]; root of context hierarchy
[2018-06-22 14:37:56.947][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:37:56.991][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:37:57.518][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:37:57.547][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b280650: startup date [Fri Jun 22 14:37:57 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693f68cc
[2018-06-22 14:37:59.969][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:37:59.985][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:38:00.605][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:38:01.429][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:38:01.450][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:38:01.463][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:38:01.464][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:38:01.475][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\ProgramData\Java\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin/client;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/lib/i386;D:\ProgramData\Java\jdk8\bin;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;C:\Android;C:\Windows\System32;D:\ProgramData\apache-maven-3.5.0\bin;E:\android\SDK\tools;E:\android\SDK\platform-tools;D:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\ProgramData\gradle-4.7\bin;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\nodejs\;D:\ProgramData\python;D:\ProgramData\python\Scripts\;D:\ProgramData\python\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Roaming\npm;D:\ProgramData\Myeclipse2017;;.]
[2018-06-22 14:38:01.646][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:38:01.647][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 4099 ms
[2018-06-22 14:38:02.162][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:38:02.163][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:38:02.182][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@45ce7904
[2018-06-22 14:38:05.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:38:05.179][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:38:05.179][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:38:05.180][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:38:05.180][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:38:05.180][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:38:05.180][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:38:05.180][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:38:05.180][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:38:05.447][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:38:05.447][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:38:05.632][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:38:05.795][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b280650: startup date [Fri Jun 22 14:37:57 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693f68cc
[2018-06-22 14:38:05.945][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:38:05.953][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:38:05.955][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:38:06.031][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:38:06.032][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:38:07.188][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:38:07.843][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 14:38:08.123][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:38:08.138][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:38:08.139][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:38:08.141][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:38:08.240][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:38:08.262][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:38:08.265][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:38:08.269][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:38:08.275][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:38:08.291][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:38:08.313][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5b280650,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:38:08.332][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:38:08.343][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:38:08.431][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:38:08.704][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:38:08.705][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:38:08.886][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:38:08.887][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:38:09.118][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:38:09.191][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:38:09.192][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:38:09.192][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:38:09.192][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:38:09.193][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:38:09.193][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:38:09.193][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:38:09.712][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:38:09.714][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:38:09.719][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:38:09.724][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529649489722 with initial instances count: 0
[2018-06-22 14:38:09.741][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:38:09.742][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529649489742, current=UP, previous=STARTING]
[2018-06-22 14:38:09.745][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:38:09.804][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:38:10.080][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:38:10.108][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 14:38:10.110][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:38:10.116][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 14.236 seconds (JVM running for 15.026)
[2018-06-22 14:38:10.169][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:38:10.440][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:38:30.893][http-nio-8020-exec-10][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 14:38:30.894][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 14:38:30.925][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
[2018-06-22 14:38:39.716][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:38:39.717][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:38:39.717][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:38:39.717][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:38:39.717][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:38:39.717][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: false
[2018-06-22 14:38:39.717][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:38:39.786][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:41:31.101][Thread-1][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@693f68cc: startup date [Fri Jun 22 14:37:56 CST 2018]; root of context hierarchy
[2018-06-22 14:41:31.103][Thread-1][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b280650: startup date [Fri Jun 22 14:37:57 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693f68cc
[2018-06-22 14:41:31.103][Thread-1][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:41:31.104][Thread-1][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529649691103, current=DOWN, previous=UP]
[2018-06-22 14:41:31.104][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:41:31.106][Thread-1][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:41:31.112][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:41:31.113][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:41:31.116][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:41:31.130][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:41:34.132][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:41:34.138][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:41:34.149][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:41:35.033][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@19207a68}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:41:35 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b280650
[2018-06-22 14:41:35.110][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@19207a68}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:41:35.125][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@19207a68}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:41:35.555][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@54f22ab9: startup date [Fri Jun 22 14:41:35 CST 2018]; root of context hierarchy
[2018-06-22 14:41:35.583][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:41:35.585][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:41:36.027][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:41:36.033][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1848252b: startup date [Fri Jun 22 14:41:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54f22ab9
[2018-06-22 14:41:37.493][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:41:37.508][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:41:37.556][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:41:37.800][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:41:37.801][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:41:37.802][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:41:37.802][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:41:37.838][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:41:37.839][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1807 ms
[2018-06-22 14:41:38.006][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:41:38.007][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:41:38.007][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@30fbbd65
[2018-06-22 14:41:38.773][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:41:38.774][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:41:38.774][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:41:38.774][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:41:38.774][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:41:38.774][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:41:38.775][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:41:38.775][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:41:38.775][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:41:38.832][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:41:38.832][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:41:38.911][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:41:38.988][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1848252b: startup date [Fri Jun 22 14:41:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54f22ab9
[2018-06-22 14:41:39.015][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:41:39.017][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:41:39.018][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:41:39.058][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:41:39.060][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:41:39.516][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:41:39.785][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:41:39.787][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:41:39.787][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:41:39.788][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:41:39.828][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:41:39.830][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:41:39.831][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:41:39.832][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:41:39.836][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:41:39.847][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:41:39.850][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1848252b,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:41:39.858][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:41:39.860][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:41:39.866][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:41:39.869][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:41:39.869][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:41:39.870][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:41:39.870][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:41:39.939][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:41:39.950][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:41:39.951][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:41:39.951][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:41:39.951][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:41:39.951][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:41:39.951][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:41:39.952][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:41:39.957][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:41:39.958][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:41:39.959][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:41:39.960][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529649699960 with initial instances count: 2
[2018-06-22 14:41:39.967][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:41:39.967][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529649699967, current=UP, previous=STARTING]
[2018-06-22 14:41:39.968][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:41:39.985][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:41:39.990][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:41:39.995][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:41:40.001][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 14:41:40.002][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:41:40.003][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 4.596 seconds (JVM running for 224.915)
[2018-06-22 14:41:40.009][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:41:40.010][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:41:44.107][http-nio-8020-exec-9][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 14:41:44.108][http-nio-8020-exec-9][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 14:41:44.117][http-nio-8020-exec-9][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
[2018-06-22 14:46:39.953][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:51:10.273][Thread-13][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@54f22ab9: startup date [Fri Jun 22 14:41:35 CST 2018]; root of context hierarchy
[2018-06-22 14:51:10.274][Thread-13][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1848252b: startup date [Fri Jun 22 14:41:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54f22ab9
[2018-06-22 14:51:10.274][Thread-13][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:51:10.274][Thread-13][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650270274, current=DOWN, previous=UP]
[2018-06-22 14:51:10.275][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:51:10.276][Thread-13][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:51:10.277][Thread-13][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:51:10.279][Thread-13][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:51:10.282][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:51:10.282][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:51:13.285][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:51:13.298][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:51:13.313][Thread-13][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:51:13.708][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@702db198}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:51:13 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1848252b
[2018-06-22 14:51:13.791][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@702db198}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:51:13.797][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@702db198}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:51:14.313][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6f68900d: startup date [Fri Jun 22 14:51:14 CST 2018]; root of context hierarchy
[2018-06-22 14:51:14.325][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:51:14.327][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:51:14.440][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:51:14.445][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72386cdc: startup date [Fri Jun 22 14:51:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f68900d
[2018-06-22 14:51:15.463][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:51:15.470][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:51:15.504][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:51:15.684][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:51:15.686][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:51:15.686][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:51:15.686][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:51:15.722][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:51:15.723][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1278 ms
[2018-06-22 14:51:15.854][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:51:15.856][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:51:15.856][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@352062a7
[2018-06-22 14:51:16.540][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:51:16.540][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:51:16.540][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:51:16.540][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:51:16.540][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:51:16.541][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:51:16.541][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:51:16.541][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:51:16.541][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:51:16.585][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:51:16.585][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:51:16.646][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:51:16.710][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72386cdc: startup date [Fri Jun 22 14:51:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f68900d
[2018-06-22 14:51:16.745][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:51:16.748][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:51:16.748][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:51:16.773][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:51:16.773][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:51:17.070][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:51:17.322][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:51:17.325][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:51:17.326][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:51:17.326][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:51:17.360][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:51:17.362][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:51:17.363][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:51:17.363][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:51:17.365][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:51:17.369][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:51:17.372][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=72386cdc,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:51:17.379][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:51:17.380][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:51:17.385][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:51:17.388][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:51:17.388][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:51:17.389][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:51:17.389][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:51:17.436][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:51:17.437][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:51:17.438][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:51:17.438][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:51:17.438][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:51:17.438][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:51:17.438][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:51:17.439][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:51:17.447][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:51:17.448][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:51:17.448][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:51:17.449][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650277449 with initial instances count: 2
[2018-06-22 14:51:17.457][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:51:17.458][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650277458, current=UP, previous=STARTING]
[2018-06-22 14:51:17.470][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:51:17.474][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:51:17.478][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:51:17.479][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:51:17.480][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:51:17.481][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 3.321 seconds (JVM running for 802.392)
[2018-06-22 14:51:17.486][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:51:17.486][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:51:17.494][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:51:19.504][Thread-24][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6f68900d: startup date [Fri Jun 22 14:51:14 CST 2018]; root of context hierarchy
[2018-06-22 14:51:19.504][Thread-24][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72386cdc: startup date [Fri Jun 22 14:51:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f68900d
[2018-06-22 14:51:19.505][Thread-24][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:51:19.505][Thread-24][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650279505, current=DOWN, previous=UP]
[2018-06-22 14:51:19.506][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:51:19.507][Thread-24][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:51:19.508][Thread-24][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:51:19.508][Thread-24][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:51:19.513][Thread-24][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:51:19.517][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:51:19.517][Thread-24][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:51:19.526][Thread-24][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:51:19.541][Thread-24][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:51:19.991][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@42d70b9}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:51:19 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72386cdc
[2018-06-22 14:51:20.013][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@42d70b9}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:51:20.016][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@42d70b9}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:51:20.422][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6aed5c87: startup date [Fri Jun 22 14:51:20 CST 2018]; root of context hierarchy
[2018-06-22 14:51:20.430][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:51:20.431][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:51:20.538][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:51:20.541][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fa41ec9: startup date [Fri Jun 22 14:51:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6aed5c87
[2018-06-22 14:51:21.404][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:51:21.411][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:51:21.438][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:51:21.611][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:51:21.611][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:51:21.612][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:51:21.612][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:51:21.635][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:51:21.636][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1095 ms
[2018-06-22 14:51:21.750][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:51:21.750][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:51:21.750][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2af793b0
[2018-06-22 14:51:22.409][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:51:22.409][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:51:22.410][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:51:22.410][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:51:22.410][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:51:22.410][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:51:22.410][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:51:22.410][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:51:22.410][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:51:22.455][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:51:22.455][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:51:22.517][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:51:22.577][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fa41ec9: startup date [Fri Jun 22 14:51:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6aed5c87
[2018-06-22 14:51:22.597][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:51:22.612][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:51:22.612][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:51:22.636][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:51:22.636][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:51:22.931][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:51:23.174][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:51:23.176][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:51:23.177][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:51:23.177][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:51:23.210][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:51:23.214][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:51:23.215][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:51:23.216][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:51:23.217][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:51:23.219][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:51:23.221][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1fa41ec9,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:51:23.231][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:51:23.233][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:51:23.238][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:51:23.241][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:51:23.241][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:51:23.241][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:51:23.241][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:51:23.282][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:51:23.284][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:51:23.284][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:51:23.284][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:51:23.285][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:51:23.285][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:51:23.285][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:51:23.286][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:51:23.290][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:51:23.291][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:51:23.291][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:51:23.292][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650283292 with initial instances count: 2
[2018-06-22 14:51:23.297][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:51:23.298][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650283298, current=UP, previous=STARTING]
[2018-06-22 14:51:23.298][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:51:23.305][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:51:23.308][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:51:23.310][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:51:23.313][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:51:23.313][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:51:23.314][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 3.009 seconds (JVM running for 808.224)
[2018-06-22 14:51:23.317][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:51:23.318][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:51:55.149][http-nio-8020-exec-4][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 14:51:55.149][http-nio-8020-exec-4][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 14:51:55.161][http-nio-8020-exec-4][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
[2018-06-22 14:53:41.153][Thread-35][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6aed5c87: startup date [Fri Jun 22 14:51:20 CST 2018]; root of context hierarchy
[2018-06-22 14:53:41.154][Thread-35][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fa41ec9: startup date [Fri Jun 22 14:51:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6aed5c87
[2018-06-22 14:53:41.155][Thread-35][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:53:41.155][Thread-35][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650421155, current=DOWN, previous=UP]
[2018-06-22 14:53:41.156][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:53:41.166][Thread-35][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:53:41.166][Thread-35][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:53:41.167][Thread-35][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:53:41.168][Thread-35][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:53:41.174][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:53:41.174][Thread-35][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:53:41.180][Thread-35][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:53:41.184][Thread-35][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:53:42.010][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@2c146a8f}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:53:42 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fa41ec9
[2018-06-22 14:53:42.039][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@2c146a8f}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:53:42.043][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@2c146a8f}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:53:42.690][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b0a29ea: startup date [Fri Jun 22 14:53:42 CST 2018]; root of context hierarchy
[2018-06-22 14:53:42.704][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:53:42.705][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:53:42.920][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:53:42.926][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34d14a06: startup date [Fri Jun 22 14:53:42 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b0a29ea
[2018-06-22 14:53:44.605][restartedMain][ERROR]org.springframework.boot.SpringApplication[842]-Application run failed
java.lang.IllegalStateException: Error processing condition on org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:64)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:440)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:128)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [com.tykj.cloud.producter.controller.DictTypeController] for bean with name 'dictTypeController' defined in file [D:\spring-cloud\tykj-cloud\cloud-producter\target\classes\com\tykj\cloud\producter\controller\DictTypeController.class]: problem with class file or dependent class; nested exception is java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1383)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:666)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:633)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:384)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition.getMatchOutcome(DevToolsDataSourceAutoConfiguration.java:164)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 22 common frames omitted
Caused by: java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:274)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:437)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1428)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1372)
	... 30 common frames omitted
[2018-06-22 14:53:44.609][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34d14a06: startup date [Fri Jun 22 14:53:42 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b0a29ea
[2018-06-22 14:53:44.611][restartedMain][WARN ]org.springframework.boot.SpringApplication[823]-Unable to close ApplicationContext
org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [com.tykj.cloud.producter.controller.DictTypeController] for bean with name 'dictTypeController' defined in file [D:\spring-cloud\tykj-cloud\cloud-producter\target\classes\com\tykj\cloud\producter\controller\DictTypeController.class]: problem with class file or dependent class; nested exception is java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1383)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:666)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:633)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:511)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:503)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1198)
	at org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:889)
	at org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:875)
	at org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:861)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:810)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:274)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:437)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1428)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1372)
	... 21 common frames omitted
[2018-06-22 14:53:49.341][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@58063891: startup date [Fri Jun 22 14:53:49 CST 2018]; root of context hierarchy
[2018-06-22 14:53:49.351][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:53:49.352][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:53:49.471][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:53:49.476][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@542ba232: startup date [Fri Jun 22 14:53:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@58063891
[2018-06-22 14:53:50.658][restartedMain][ERROR]org.springframework.boot.SpringApplication[842]-Application run failed
java.lang.IllegalStateException: Error processing condition on org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:64)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:440)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:128)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [com.tykj.cloud.producter.controller.DictTypeController] for bean with name 'dictTypeController' defined in file [D:\spring-cloud\tykj-cloud\cloud-producter\target\classes\com\tykj\cloud\producter\controller\DictTypeController.class]: problem with class file or dependent class; nested exception is java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1383)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:666)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:633)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:384)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition.getMatchOutcome(DevToolsDataSourceAutoConfiguration.java:164)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 22 common frames omitted
Caused by: java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:274)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:437)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1428)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1372)
	... 30 common frames omitted
[2018-06-22 14:53:50.659][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@542ba232: startup date [Fri Jun 22 14:53:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@58063891
[2018-06-22 14:53:50.660][restartedMain][WARN ]org.springframework.boot.SpringApplication[823]-Unable to close ApplicationContext
org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [com.tykj.cloud.producter.controller.DictTypeController] for bean with name 'dictTypeController' defined in file [D:\spring-cloud\tykj-cloud\cloud-producter\target\classes\com\tykj\cloud\producter\controller\DictTypeController.class]: problem with class file or dependent class; nested exception is java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1383)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:666)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:633)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:511)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:503)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1198)
	at org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:889)
	at org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:875)
	at org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:861)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:810)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.ClassFormatError: Illegal field modifiers in class com/tykj/cloud/api/api/IDictTypeFeign: 0x1B
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:163)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:274)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:437)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1428)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1372)
	... 21 common frames omitted
[2018-06-22 14:55:04.140][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3de3d723: startup date [Fri Jun 22 14:55:04 CST 2018]; root of context hierarchy
[2018-06-22 14:55:04.152][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:04.154][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:04.302][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:55:04.311][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3cb652c1: startup date [Fri Jun 22 14:55:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3de3d723
[2018-06-22 14:55:05.818][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:55:05.827][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:05.862][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:06.199][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:55:06.200][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:06.201][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:55:06.201][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:55:06.236][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:55:06.238][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1928 ms
[2018-06-22 14:55:06.472][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:06.472][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:06.473][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@15edf24b
[2018-06-22 14:55:07.464][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:55:07.464][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:55:07.464][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:55:07.465][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:55:07.465][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:55:07.465][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:55:07.465][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:55:07.465][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:55:07.465][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:55:07.509][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:07.510][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:07.582][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:07.693][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3cb652c1: startup date [Fri Jun 22 14:55:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3de3d723
[2018-06-22 14:55:07.727][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:55:07.735][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:55:07.735][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:07.765][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:07.765][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:08.121][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:55:08.395][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:55:08.397][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:08.397][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:08.397][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:08.431][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:55:08.434][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:55:08.435][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:55:08.436][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:55:08.438][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:55:08.440][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:55:08.442][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3cb652c1,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:55:08.448][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:55:08.451][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:55:08.456][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:55:08.458][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:55:08.459][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:55:08.459][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:55:08.459][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:55:08.531][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:55:08.532][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:55:08.532][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:55:08.532][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:55:08.532][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:55:08.532][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:55:08.532][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:55:08.532][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:55:08.542][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:55:08.543][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:55:08.544][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:55:08.545][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650508545 with initial instances count: 0
[2018-06-22 14:55:08.552][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:55:08.552][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650508552, current=UP, previous=STARTING]
[2018-06-22 14:55:08.552][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:55:08.563][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:55:08.564][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:08.565][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:55:08.568][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:55:08.568][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:55:08.569][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 4.552 seconds (JVM running for 1033.479)
[2018-06-22 14:55:08.571][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:55:08.572][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:55:31.880][Thread-46][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b0a29ea: startup date [Fri Jun 22 14:53:42 CST 2018]; root of context hierarchy
[2018-06-22 14:55:31.882][Thread-46][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@58063891: startup date [Fri Jun 22 14:53:49 CST 2018]; root of context hierarchy
[2018-06-22 14:55:31.883][Thread-46][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3de3d723: startup date [Fri Jun 22 14:55:04 CST 2018]; root of context hierarchy
[2018-06-22 14:55:31.885][Thread-46][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3cb652c1: startup date [Fri Jun 22 14:55:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3de3d723
[2018-06-22 14:55:31.886][Thread-46][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:55:31.886][Thread-46][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650531886, current=DOWN, previous=UP]
[2018-06-22 14:55:31.886][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:55:31.887][Thread-46][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:55:31.891][Thread-46][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:55:31.892][Thread-46][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:55:31.897][Thread-46][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:55:31.900][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:55:34.915][Thread-46][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:55:34.927][Thread-46][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:55:34.930][Thread-46][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:55:35.685][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@73fc278}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:55:35 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3cb652c1
[2018-06-22 14:55:35.704][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@73fc278}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:35.707][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@73fc278}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:55:36.162][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5539d2f8: startup date [Fri Jun 22 14:55:36 CST 2018]; root of context hierarchy
[2018-06-22 14:55:36.171][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:36.172][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:36.285][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:55:36.287][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e5f9d7: startup date [Fri Jun 22 14:55:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5539d2f8
[2018-06-22 14:55:37.127][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:55:37.132][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:37.163][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:37.337][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:55:37.337][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:37.338][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:55:37.338][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:55:37.362][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:55:37.363][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1076 ms
[2018-06-22 14:55:37.485][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:37.485][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:37.485][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6a75fa4d
[2018-06-22 14:55:38.638][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:55:38.638][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:55:38.638][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:55:38.638][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:55:38.639][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:55:38.639][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:55:38.639][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:55:38.639][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:55:38.640][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:55:38.685][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:38.685][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:38.742][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:38.817][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e5f9d7: startup date [Fri Jun 22 14:55:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5539d2f8
[2018-06-22 14:55:38.841][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:55:38.842][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:55:38.842][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:38.872][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:38.872][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:39.201][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:55:39.604][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:55:39.606][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:39.606][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:39.607][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:39.671][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:55:39.675][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:55:39.676][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:55:39.676][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:55:39.678][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:55:39.679][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:55:39.680][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=13e5f9d7,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:55:39.686][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:55:39.688][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:55:39.692][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:55:39.693][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:55:39.693][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:55:39.693][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:55:39.693][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:55:39.731][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:55:39.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:55:39.733][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:55:39.733][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:55:39.733][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:55:39.734][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:55:39.734][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:55:39.734][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:55:39.740][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:55:39.742][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:55:39.743][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:55:39.743][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650539743 with initial instances count: 2
[2018-06-22 14:55:39.750][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:55:39.750][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650539750, current=UP, previous=STARTING]
[2018-06-22 14:55:39.754][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:55:39.762][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:39.763][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:55:39.764][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:55:39.768][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:55:39.768][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:55:39.768][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 3.726 seconds (JVM running for 1064.68)
[2018-06-22 14:55:39.771][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:55:39.771][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:55:42.646][Thread-67][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5539d2f8: startup date [Fri Jun 22 14:55:36 CST 2018]; root of context hierarchy
[2018-06-22 14:55:42.647][Thread-67][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e5f9d7: startup date [Fri Jun 22 14:55:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5539d2f8
[2018-06-22 14:55:42.647][Thread-67][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:55:42.647][Thread-67][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650542647, current=DOWN, previous=UP]
[2018-06-22 14:55:42.648][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:55:42.649][Thread-67][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:55:42.649][Thread-67][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:55:42.650][Thread-67][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:55:42.651][Thread-67][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:55:42.659][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:55:42.660][Thread-67][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:55:42.665][Thread-67][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:55:42.668][Thread-67][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:55:43.616][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6c767c20}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:55:43 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e5f9d7
[2018-06-22 14:55:43.643][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6c767c20}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:43.647][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6c767c20}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:55:44.287][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@592b3a7e: startup date [Fri Jun 22 14:55:44 CST 2018]; root of context hierarchy
[2018-06-22 14:55:44.296][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:44.296][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:44.401][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:55:44.403][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f855fe6: startup date [Fri Jun 22 14:55:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@592b3a7e
[2018-06-22 14:55:45.228][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:55:45.235][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:45.264][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:45.423][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:55:45.424][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:45.424][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:55:45.424][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:55:45.446][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:55:45.446][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1043 ms
[2018-06-22 14:55:45.553][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:45.553][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:45.553][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@770280b7
[2018-06-22 14:55:46.155][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:55:46.155][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:55:46.156][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:55:46.156][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:55:46.156][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:55:46.156][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:55:46.156][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:55:46.156][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:55:46.156][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:55:46.194][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:46.194][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:46.247][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:46.310][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f855fe6: startup date [Fri Jun 22 14:55:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@592b3a7e
[2018-06-22 14:55:46.329][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:55:46.330][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:55:46.330][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:46.352][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:46.352][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:46.647][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:55:46.900][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:55:46.903][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:46.903][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:46.904][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:46.965][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:55:46.967][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:55:46.968][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:55:46.968][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:55:46.969][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:55:46.970][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:55:46.972][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7f855fe6,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:55:46.979][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:55:46.980][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:55:46.985][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:55:46.987][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:55:46.988][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:55:46.988][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:55:46.988][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:55:47.041][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:55:47.047][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:55:47.048][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:55:47.048][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:55:47.048][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:55:47.049][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:55:47.049][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:55:47.049][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:55:47.058][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:55:47.059][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:55:47.060][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:55:47.061][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650547061 with initial instances count: 2
[2018-06-22 14:55:47.067][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:55:47.067][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650547067, current=UP, previous=STARTING]
[2018-06-22 14:55:47.078][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:55:47.080][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:47.084][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:55:47.090][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:55:47.091][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:55:47.091][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:55:47.093][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 2.922 seconds (JVM running for 1072.004)
[2018-06-22 14:55:47.097][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:55:47.097][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:55:51.118][Thread-78][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@592b3a7e: startup date [Fri Jun 22 14:55:44 CST 2018]; root of context hierarchy
[2018-06-22 14:55:51.119][Thread-78][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f855fe6: startup date [Fri Jun 22 14:55:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@592b3a7e
[2018-06-22 14:55:51.119][Thread-78][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:55:51.119][Thread-78][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650551119, current=DOWN, previous=UP]
[2018-06-22 14:55:51.120][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:55:51.121][Thread-78][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:55:51.121][Thread-78][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:55:51.121][Thread-78][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:55:51.122][Thread-78][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:55:51.127][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:55:51.127][Thread-78][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:55:51.138][Thread-78][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:55:51.142][Thread-78][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:55:51.686][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ec505b9}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:55:51 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f855fe6
[2018-06-22 14:55:51.713][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ec505b9}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:51.717][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ec505b9}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:55:52.302][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4eee169: startup date [Fri Jun 22 14:55:52 CST 2018]; root of context hierarchy
[2018-06-22 14:55:52.311][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:52.313][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:52.431][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:55:52.433][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d89cd74: startup date [Fri Jun 22 14:55:52 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4eee169
[2018-06-22 14:55:53.435][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:55:53.444][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:55:53.472][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:55:53.632][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:55:53.633][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:53.633][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:55:53.633][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:55:53.658][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:55:53.659][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1226 ms
[2018-06-22 14:55:53.769][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:53.769][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:53.769][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@29b853d5
[2018-06-22 14:55:54.373][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:55:54.373][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:55:54.374][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:55:54.374][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:55:54.374][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:55:54.374][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:55:54.374][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:55:54.374][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:55:54.374][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:55:54.417][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:55:54.417][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:55:54.474][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:54.535][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d89cd74: startup date [Fri Jun 22 14:55:52 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4eee169
[2018-06-22 14:55:54.557][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:55:54.559][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:55:54.559][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:54.583][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:54.583][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:55:54.909][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:55:55.317][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:55:55.320][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:55.320][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:55:55.320][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:55:55.378][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:55:55.380][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:55:55.381][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:55:55.381][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:55:55.384][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:55:55.385][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:55:55.388][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4d89cd74,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:55:55.409][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:55:55.411][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:55:55.431][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:55:55.434][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:55:55.434][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:55:55.434][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:55:55.434][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:55:55.502][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:55:55.503][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:55:55.503][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:55:55.503][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:55:55.503][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:55:55.503][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:55:55.503][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:55:55.504][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:55:55.508][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:55:55.509][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:55:55.510][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:55:55.510][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650555510 with initial instances count: 2
[2018-06-22 14:55:55.516][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:55:55.516][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650555516, current=UP, previous=STARTING]
[2018-06-22 14:55:55.517][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:55:55.523][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:55:55.529][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:55:55.530][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:55:55.533][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:55:55.533][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:55:55.534][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 3.392 seconds (JVM running for 1080.445)
[2018-06-22 14:55:55.538][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:55:55.538][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:56:00.362][Thread-89][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4eee169: startup date [Fri Jun 22 14:55:52 CST 2018]; root of context hierarchy
[2018-06-22 14:56:00.363][Thread-89][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d89cd74: startup date [Fri Jun 22 14:55:52 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4eee169
[2018-06-22 14:56:00.363][Thread-89][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:56:00.363][Thread-89][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650560363, current=DOWN, previous=UP]
[2018-06-22 14:56:00.364][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:56:00.365][Thread-89][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:56:00.365][Thread-89][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:56:00.366][Thread-89][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:56:00.369][Thread-89][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:56:00.370][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:56:00.371][Thread-89][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:56:00.376][Thread-89][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:56:00.380][Thread-89][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:56:00.891][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@57421a08}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:56:00 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d89cd74
[2018-06-22 14:56:00.914][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@57421a08}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:00.918][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@57421a08}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:56:01.408][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@428d8fc1: startup date [Fri Jun 22 14:56:01 CST 2018]; root of context hierarchy
[2018-06-22 14:56:01.419][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:01.422][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:56:01.552][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:56:01.554][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42f86d29: startup date [Fri Jun 22 14:56:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@428d8fc1
[2018-06-22 14:56:02.391][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:56:02.398][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:02.427][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:56:02.590][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:56:02.591][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:56:02.591][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:56:02.591][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:56:02.626][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:56:02.627][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1073 ms
[2018-06-22 14:56:02.734][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:56:02.734][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:56:02.735][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@108eb91f
[2018-06-22 14:56:03.317][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:56:03.318][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:56:03.358][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:56:03.358][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:56:03.415][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:03.488][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42f86d29: startup date [Fri Jun 22 14:56:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@428d8fc1
[2018-06-22 14:56:03.510][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:56:03.512][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:56:03.512][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:56:03.539][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:03.539][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:03.858][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:56:04.100][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:56:04.101][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:56:04.102][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:56:04.102][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:56:04.132][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:56:04.134][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:56:04.135][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:56:04.135][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:56:04.136][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:56:04.139][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:56:04.141][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=42f86d29,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:56:04.147][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:56:04.148][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:56:04.153][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:56:04.156][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:56:04.156][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:56:04.157][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:56:04.157][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:56:04.196][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:56:04.197][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:56:04.197][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:56:04.197][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:56:04.197][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:56:04.198][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:56:04.198][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:56:04.198][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:56:04.203][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:56:04.204][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:56:04.204][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:56:04.205][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650564205 with initial instances count: 2
[2018-06-22 14:56:04.210][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:56:04.210][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650564210, current=UP, previous=STARTING]
[2018-06-22 14:56:04.211][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:56:04.219][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:56:04.224][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:56:04.225][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:56:04.227][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:56:04.228][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:56:04.228][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 2.942 seconds (JVM running for 1089.139)
[2018-06-22 14:56:04.231][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:56:04.231][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:56:18.442][Thread-98][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@428d8fc1: startup date [Fri Jun 22 14:56:01 CST 2018]; root of context hierarchy
[2018-06-22 14:56:18.443][Thread-98][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42f86d29: startup date [Fri Jun 22 14:56:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@428d8fc1
[2018-06-22 14:56:18.443][Thread-98][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:56:18.443][Thread-98][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650578443, current=DOWN, previous=UP]
[2018-06-22 14:56:18.444][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:56:18.445][Thread-98][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:56:18.445][Thread-98][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:56:18.445][Thread-98][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:56:18.446][Thread-98][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:56:18.450][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:56:18.450][Thread-98][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:56:18.454][Thread-98][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:56:18.458][Thread-98][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:56:18.864][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1cce0a24}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:56:18 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42f86d29
[2018-06-22 14:56:18.884][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1cce0a24}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:18.887][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1cce0a24}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:56:19.309][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7eafbc98: startup date [Fri Jun 22 14:56:19 CST 2018]; root of context hierarchy
[2018-06-22 14:56:19.317][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:19.318][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:56:19.422][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:56:19.425][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1903b78f: startup date [Fri Jun 22 14:56:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7eafbc98
[2018-06-22 14:56:20.235][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:56:20.241][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:20.266][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:56:20.424][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:56:20.424][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:56:20.425][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:56:20.425][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:56:20.447][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:56:20.448][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1023 ms
[2018-06-22 14:56:20.564][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:56:20.564][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:56:20.564][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@21abc021
[2018-06-22 14:56:21.177][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:56:21.178][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:56:21.214][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:56:21.214][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:56:21.262][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:21.315][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1903b78f: startup date [Fri Jun 22 14:56:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7eafbc98
[2018-06-22 14:56:21.334][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:56:21.335][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:56:21.335][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:56:21.359][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:21.359][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:21.647][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:56:21.887][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:56:21.889][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:56:21.890][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:56:21.890][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:56:21.920][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:56:21.921][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:56:21.922][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:56:21.923][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:56:21.924][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:56:21.926][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:56:21.928][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1903b78f,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:56:21.933][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:56:21.934][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:56:21.939][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:56:21.941][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:56:21.942][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:56:21.942][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:56:21.942][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:56:21.984][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:56:21.985][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:56:21.985][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:56:21.985][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:56:21.985][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:56:21.985][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:56:21.985][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:56:21.986][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:56:21.991][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:56:21.992][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:56:21.993][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:56:21.994][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650581994 with initial instances count: 2
[2018-06-22 14:56:22.002][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:56:22.002][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650582002, current=UP, previous=STARTING]
[2018-06-22 14:56:22.003][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:56:22.010][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:56:22.017][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:56:22.019][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:56:22.024][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:56:22.025][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:56:22.029][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 2.832 seconds (JVM running for 1106.94)
[2018-06-22 14:56:22.033][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:56:22.034][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:56:51.890][Thread-107][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7eafbc98: startup date [Fri Jun 22 14:56:19 CST 2018]; root of context hierarchy
[2018-06-22 14:56:51.890][Thread-107][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1903b78f: startup date [Fri Jun 22 14:56:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7eafbc98
[2018-06-22 14:56:51.890][Thread-107][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:56:51.891][Thread-107][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650611891, current=DOWN, previous=UP]
[2018-06-22 14:56:51.891][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:56:51.892][Thread-107][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:56:51.893][Thread-107][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:56:51.893][Thread-107][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:56:51.894][Thread-107][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:56:51.896][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:56:51.897][Thread-107][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:56:51.901][Thread-107][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:56:51.904][Thread-107][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:56:52.705][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b05de51}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:56:52 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1903b78f
[2018-06-22 14:56:52.724][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b05de51}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:52.728][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b05de51}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:56:53.196][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7292d88c: startup date [Fri Jun 22 14:56:53 CST 2018]; root of context hierarchy
[2018-06-22 14:56:53.205][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:53.206][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:56:53.310][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:56:53.313][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5072da37: startup date [Fri Jun 22 14:56:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7292d88c
[2018-06-22 14:56:54.119][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:56:54.126][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:56:54.155][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:56:54.333][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:56:54.334][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:56:54.334][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:56:54.334][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:56:54.357][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:56:54.360][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1047 ms
[2018-06-22 14:56:54.472][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:56:54.472][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:56:54.472][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@779fb277
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:56:55.074][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:56:55.075][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:56:55.114][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:56:55.114][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:56:55.170][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:55.234][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5072da37: startup date [Fri Jun 22 14:56:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7292d88c
[2018-06-22 14:56:55.257][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:56:55.258][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:56:55.259][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:56:55.292][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:55.293][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:56:55.595][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:56:56.179][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:56:56.181][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:56:56.182][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:56:56.182][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:56:56.250][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:56:56.253][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:56:56.253][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:56:56.254][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:56:56.258][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:56:56.260][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:56:56.266][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5072da37,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:56:56.284][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:56:56.300][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:56:56.309][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:56:56.315][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:56:56.315][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:56:56.315][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:56:56.315][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:56:56.381][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:56:56.382][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:56:56.382][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:56:56.383][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:56:56.383][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:56:56.383][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:56:56.383][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:56:56.383][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:56:56.389][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:56:56.390][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:56:56.392][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:56:56.393][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650616393 with initial instances count: 2
[2018-06-22 14:56:56.399][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:56:56.399][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650616399, current=UP, previous=STARTING]
[2018-06-22 14:56:56.400][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:56:56.409][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:56:56.415][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:56:56.416][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:56:56.419][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:56:56.420][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:56:56.420][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 3.342 seconds (JVM running for 1141.331)
[2018-06-22 14:56:56.426][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:56:56.426][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:57:03.508][Thread-116][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7292d88c: startup date [Fri Jun 22 14:56:53 CST 2018]; root of context hierarchy
[2018-06-22 14:57:03.509][Thread-116][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5072da37: startup date [Fri Jun 22 14:56:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7292d88c
[2018-06-22 14:57:03.509][Thread-116][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:57:03.509][Thread-116][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650623509, current=DOWN, previous=UP]
[2018-06-22 14:57:03.509][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:57:03.511][Thread-116][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:57:03.511][Thread-116][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:57:03.511][Thread-116][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:57:03.512][Thread-116][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:57:03.515][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:57:03.516][Thread-116][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:57:03.519][Thread-116][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:57:03.522][Thread-116][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:57:03.602][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7d6bb58c}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:57:03 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5072da37
[2018-06-22 14:57:03.622][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7d6bb58c}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:57:03.626][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7d6bb58c}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:57:04.098][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b2b2fc8: startup date [Fri Jun 22 14:57:04 CST 2018]; root of context hierarchy
[2018-06-22 14:57:04.108][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:57:04.109][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:57:04.226][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:57:04.230][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f7acc0d: startup date [Fri Jun 22 14:57:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b2b2fc8
[2018-06-22 14:57:05.036][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:57:05.042][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:57:05.069][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:57:05.226][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:57:05.227][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:57:05.227][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:57:05.227][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:57:05.250][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:57:05.251][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1021 ms
[2018-06-22 14:57:05.363][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:57:05.363][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:57:05.363][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@137d5081
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:57:05.969][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:57:06.008][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:57:06.008][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:57:06.064][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:57:06.122][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f7acc0d: startup date [Fri Jun 22 14:57:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b2b2fc8
[2018-06-22 14:57:06.142][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:57:06.143][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:57:06.143][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:57:06.166][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:57:06.167][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:57:06.457][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:57:06.690][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:57:06.692][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:57:06.692][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:57:06.692][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:57:06.722][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:57:06.724][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:57:06.724][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:57:06.724][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:57:06.726][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:57:06.727][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:57:06.729][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1f7acc0d,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:57:06.735][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:57:06.736][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:57:06.740][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:57:06.741][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:57:06.742][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:57:06.742][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:57:06.742][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:57:06.782][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:57:06.784][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:57:06.784][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:57:06.784][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:57:06.784][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:57:06.785][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:57:06.785][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:57:06.785][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:57:06.789][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:57:06.790][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:57:06.791][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:57:06.791][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650626791 with initial instances count: 2
[2018-06-22 14:57:06.797][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:57:06.798][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650626798, current=UP, previous=STARTING]
[2018-06-22 14:57:06.799][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:57:06.807][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:57:06.811][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:57:06.813][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:57:06.815][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:57:06.816][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:57:06.817][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 2.833 seconds (JVM running for 1151.728)
[2018-06-22 14:57:06.821][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:57:06.822][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:57:08.892][Thread-125][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@b2b2fc8: startup date [Fri Jun 22 14:57:04 CST 2018]; root of context hierarchy
[2018-06-22 14:57:08.893][Thread-125][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f7acc0d: startup date [Fri Jun 22 14:57:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b2b2fc8
[2018-06-22 14:57:08.893][Thread-125][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 14:57:08.893][Thread-125][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529650628893, current=DOWN, previous=UP]
[2018-06-22 14:57:08.893][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:57:08.896][Thread-125][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 14:57:08.896][Thread-125][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 14:57:08.897][Thread-125][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 14:57:08.897][Thread-125][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 14:57:08.898][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:57:11.900][Thread-125][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 14:57:11.905][Thread-125][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - deregister  status: 200
[2018-06-22 14:57:11.909][Thread-125][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 14:57:12.474][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4d1c6812}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:57:12 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f7acc0d
[2018-06-22 14:57:12.509][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4d1c6812}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:57:12.513][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4d1c6812}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2018-06-22 14:57:13.079][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@322c305d: startup date [Fri Jun 22 14:57:13 CST 2018]; root of context hierarchy
[2018-06-22 14:57:13.086][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:57:13.087][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:57:13.186][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 14:57:13.189][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a4e3af6: startup date [Fri Jun 22 14:57:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@322c305d
[2018-06-22 14:57:14.010][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 14:57:14.017][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:57:14.044][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$486a2792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 14:57:14.201][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 14:57:14.202][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:57:14.202][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 14:57:14.202][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 14:57:14.225][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 14:57:14.227][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 1038 ms
[2018-06-22 14:57:14.337][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:57:14.337][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:57:14.338][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3710ce5b
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 14:57:14.911][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 14:57:14.949][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 14:57:14.949][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 14:57:15.000][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:57:15.056][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a4e3af6: startup date [Fri Jun 22 14:57:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@322c305d
[2018-06-22 14:57:15.073][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 14:57:15.074][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 14:57:15.074][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:57:15.100][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:57:15.100][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 14:57:15.400][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 14:57:15.634][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 14:57:15.636][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:57:15.636][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 14:57:15.636][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 14:57:15.668][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 14:57:15.671][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 14:57:15.672][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 14:57:15.673][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 14:57:15.675][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 14:57:15.677][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 14:57:15.678][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5a4e3af6,type=ConfigurationPropertiesRebinder]
[2018-06-22 14:57:15.684][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 14:57:15.685][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 14:57:15.689][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 14:57:15.692][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 14:57:15.693][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 14:57:15.693][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 14:57:15.693][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 14:57:15.731][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 14:57:15.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 14:57:15.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 14:57:15.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 14:57:15.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 14:57:15.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 14:57:15.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 14:57:15.732][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 14:57:15.737][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 14:57:15.738][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 14:57:15.738][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 14:57:15.739][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529650635739 with initial instances count: 2
[2018-06-22 14:57:15.745][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 14:57:15.745][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529650635745, current=UP, previous=STARTING]
[2018-06-22 14:57:15.746][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 14:57:15.757][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 14:57:15.760][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 14:57:15.762][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 14:57:15.766][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 14:57:15.766][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 14:57:15.767][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 2.812 seconds (JVM running for 1160.678)
[2018-06-22 14:57:15.770][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 14:57:15.771][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 14:57:18.884][http-nio-8020-exec-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 14:57:18.884][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 14:57:18.895][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 11 ms
[2018-06-22 14:57:18.899][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:57:30.938][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:57:31.220][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:57:31.405][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:57:31.460][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@26731601}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 14:57:31 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a4e3af6
[2018-06-22 14:57:31.480][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@26731601}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 14:57:31.584][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:57:31.694][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@26731601}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 14:57:31.711][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@26731601}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 14:57:31.720][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:57:31.772][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@26731601}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 14:57:31.780][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@26731601}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 14:57:31.785][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@26731601}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@50669cbf
[2018-06-22 14:59:33.153][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:59:37.240][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:59:37.424][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:59:37.591][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:59:37.763][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:59:38.683][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 14:59:38.885][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:02:15.735][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 15:07:15.737][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 15:44:15.737][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39264407: startup date [Fri Jun 22 15:44:15 CST 2018]; root of context hierarchy
[2018-06-22 15:44:16.121][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 15:44:16.180][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7c3bcdea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 15:44:16.566][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 15:44:16.587][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45223c68: startup date [Fri Jun 22 15:44:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39264407
[2018-06-22 15:44:18.565][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 15:44:18.581][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 15:44:19.017][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7c3bcdea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 15:44:19.726][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 15:44:19.741][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 15:44:19.753][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 15:44:19.753][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 15:44:19.761][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\ProgramData\Java\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin/client;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/lib/i386;D:\ProgramData\Java\jdk8\bin;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;C:\Android;C:\Windows\System32;D:\ProgramData\apache-maven-3.5.0\bin;E:\android\SDK\tools;E:\android\SDK\platform-tools;D:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\ProgramData\gradle-4.7\bin;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\nodejs\;D:\ProgramData\python;D:\ProgramData\python\Scripts\;D:\ProgramData\python\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Roaming\npm;D:\ProgramData\Myeclipse2017;;.]
[2018-06-22 15:44:19.912][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 15:44:19.912][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 3325 ms
[2018-06-22 15:44:20.411][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 15:44:20.411][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 15:44:20.428][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@10cfa5f1
[2018-06-22 15:44:23.440][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 15:44:23.440][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 15:44:23.440][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 15:44:23.440][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 15:44:23.441][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 15:44:23.441][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 15:44:23.441][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 15:44:23.441][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 15:44:23.441][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 15:44:23.661][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 15:44:23.661][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 15:44:23.830][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 15:44:23.966][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45223c68: startup date [Fri Jun 22 15:44:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@39264407
[2018-06-22 15:44:24.094][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 15:44:24.097][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 15:44:24.098][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 15:44:24.164][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 15:44:24.164][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 15:44:25.141][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 15:44:25.598][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 15:44:25.816][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 15:44:25.831][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 15:44:25.833][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 15:44:25.834][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 15:44:25.928][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 15:44:25.953][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 15:44:25.954][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 15:44:25.955][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 15:44:25.961][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 15:44:25.971][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 15:44:25.989][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=45223c68,type=ConfigurationPropertiesRebinder]
[2018-06-22 15:44:26.011][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 15:44:26.029][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 15:44:26.107][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 15:44:26.367][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 15:44:26.368][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 15:44:26.509][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 15:44:26.509][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 15:44:26.747][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 15:44:26.821][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 15:44:26.821][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 15:44:26.821][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 15:44:26.822][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 15:44:26.822][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 15:44:26.823][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 15:44:26.826][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 15:44:27.150][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 15:44:27.162][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 15:44:27.179][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 15:44:27.194][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529653467191 with initial instances count: 0
[2018-06-22 15:44:27.566][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 15:44:27.568][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529653467568, current=UP, previous=STARTING]
[2018-06-22 15:44:27.571][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 15:44:27.701][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 15:44:27.758][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 15:44:27.818][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 15:44:27.820][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 15:44:27.837][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 12.988 seconds (JVM running for 13.777)
[2018-06-22 15:44:27.850][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 15:44:28.066][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 15:44:57.164][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 15:44:57.165][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 15:44:57.166][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 15:44:57.166][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 15:44:57.167][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 15:44:57.167][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: false
[2018-06-22 15:44:57.167][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 15:44:57.656][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 15:48:38.290][http-nio-8020-exec-10][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 15:48:38.290][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 15:48:38.332][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
[2018-06-22 15:48:38.415][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:26.834][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 15:49:27.028][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:34.030][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:34.275][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:34.475][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:34.646][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:34.809][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:35.652][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:35.842][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:36.010][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:36.194][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:36.368][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:36.523][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:49:59.368][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:15.011][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:33.929][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:34.149][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:34.330][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:34.507][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:34.684][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:34.850][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:35.036][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:35.217][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:50:35.322][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3c4cc8d7}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 15:50:35 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45223c68
[2018-06-22 15:50:35.405][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3c4cc8d7}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 15:50:35.765][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3c4cc8d7}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 15:50:35.804][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3c4cc8d7}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 15:50:35.852][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3c4cc8d7}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 15:50:35.868][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3c4cc8d7}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 15:50:35.876][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@3c4cc8d7}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5cd3e363
[2018-06-22 15:51:22.974][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:24.115][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:24.321][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:24.489][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:24.677][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:24.843][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:25.032][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:25.213][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:25.421][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:25.635][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:45.934][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:47.419][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:47.637][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:47.826][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:48.019][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:48.235][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:48.417][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:48.597][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:48.780][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:48.967][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:49.142][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:49.335][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:55.336][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:55.529][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:55.705][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:55.867][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:56.054][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:56.225][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:56.381][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:51:56.551][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:54:26.835][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 15:55:27.101][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:55:27.429][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:55:27.643][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:55:27.818][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:56:15.597][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:56:16.170][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:56:16.355][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:56:16.544][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:56:16.726][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:57:12.500][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:31.980][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:31.981][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:32.053][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:32.411][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:32.621][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:32.811][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:32.965][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:58:33.133][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 15:59:26.837][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 16:04:26.841][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 16:44:09.585][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@43407c6e: startup date [Fri Jun 22 16:44:09 CST 2018]; root of context hierarchy
[2018-06-22 16:44:09.907][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 16:44:09.953][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$80baa2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 16:44:10.255][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 16:44:10.289][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3193ace7: startup date [Fri Jun 22 16:44:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@43407c6e
[2018-06-22 16:44:12.553][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 16:44:12.581][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 16:44:13.145][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$80baa2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 16:44:14.317][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 16:44:14.335][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 16:44:14.347][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 16:44:14.348][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 16:44:14.357][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\ProgramData\Java\jdk8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin/client;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/bin;D:/ProgramData/Myeclipse2017//binary/com.sun.java.jdk8.win32.x86_1.8.0.v112/jre/lib/i386;D:\ProgramData\Java\jdk8\bin;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\Program Files\TortoiseSVN\bin;C:\Android;C:\Windows\System32;D:\ProgramData\apache-maven-3.5.0\bin;E:\android\SDK\tools;E:\android\SDK\platform-tools;D:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\ProgramData\gradle-4.7\bin;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\nodejs\;D:\ProgramData\python;D:\ProgramData\python\Scripts\;D:\ProgramData\python\;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Roaming\npm;D:\ProgramData\Myeclipse2017;;.]
[2018-06-22 16:44:14.499][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 16:44:14.500][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 4211 ms
[2018-06-22 16:44:15.088][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 16:44:15.088][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 16:44:15.126][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6aec29ec
[2018-06-22 16:44:17.351][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 16:44:17.352][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 16:44:17.352][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 16:44:17.352][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 16:44:17.352][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 16:44:17.352][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 16:44:17.352][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 16:44:17.352][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 16:44:17.353][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 16:44:17.586][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 16:44:17.586][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 16:44:17.742][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 16:44:17.890][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3193ace7: startup date [Fri Jun 22 16:44:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@43407c6e
[2018-06-22 16:44:17.982][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 16:44:17.985][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 16:44:17.986][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 16:44:18.053][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 16:44:18.054][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 16:44:18.977][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 16:44:19.551][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 16:44:20.078][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 16:44:20.113][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 16:44:20.117][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 16:44:20.118][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 16:44:20.389][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 16:44:20.402][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 16:44:20.404][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 16:44:20.411][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 16:44:20.416][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 16:44:20.428][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 16:44:20.455][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3193ace7,type=ConfigurationPropertiesRebinder]
[2018-06-22 16:44:20.482][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 16:44:20.515][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 16:44:20.694][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 16:44:21.000][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 16:44:21.000][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 16:44:21.181][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 16:44:21.182][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 16:44:21.447][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 16:44:21.523][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 16:44:21.524][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 16:44:21.524][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 16:44:21.524][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 16:44:21.524][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 16:44:21.524][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 16:44:21.525][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 16:44:21.790][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 16:44:21.794][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 16:44:21.801][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 16:44:21.807][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529657061805 with initial instances count: 1
[2018-06-22 16:44:21.821][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 16:44:21.822][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529657061822, current=UP, previous=STARTING]
[2018-06-22 16:44:21.824][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020: registering service...
[2018-06-22 16:44:21.871][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-8864FFC:cloud-product:8020 - registration status: 204
[2018-06-22 16:44:21.880][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 16:44:21.893][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 16:44:21.912][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 16:44:21.913][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 16:44:21.915][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 13.084 seconds (JVM running for 14.154)
[2018-06-22 16:44:21.921][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 16:44:22.146][http-nio-8020-exec-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 16:44:22.146][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 16:44:22.180][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
[2018-06-22 16:44:22.484][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 16:44:22.736][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b63bfd7}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 16:44:22 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3193ace7
[2018-06-22 16:44:22.786][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b63bfd7}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 16:44:23.002][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b63bfd7}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 16:44:23.025][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b63bfd7}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 16:44:23.057][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b63bfd7}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 16:44:23.066][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b63bfd7}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 16:44:23.070][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6b63bfd7}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@191ef4c7
[2018-06-22 16:44:24.293][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 16:47:03.384][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 16:49:21.529][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 16:54:21.530][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 16:59:21.532][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 17:04:21.533][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:13:58.753][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3e3058a7: startup date [Fri Jun 22 20:13:58 CST 2018]; root of context hierarchy
[2018-06-22 20:13:59.081][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 20:13:59.143][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$499cc606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 20:14:00.023][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 20:14:00.071][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335e83e2: startup date [Fri Jun 22 20:14:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3e3058a7
[2018-06-22 20:14:02.870][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 20:14:02.893][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 20:14:03.645][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$499cc606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 20:14:04.818][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 20:14:04.835][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 20:14:04.851][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 20:14:04.851][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 20:14:04.865][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;D:\Program Files\Java\jdk1.8.0_161\bin;D:\Program Files\Java\jdk1.8.0_161\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Git\cmd;D:\ProgramData\apache-maven-3.5.0\bin;D:\ProgramData\scala\bin;D:\Program Files\nodejs\;D:\ProgramData\Python\Scripts\;D:\ProgramData\Python\;C:\Users\26223\AppData\Local\Microsoft\WindowsApps;C:\Users\26223\AppData\Roaming\npm;D:\ProgramData\eclipse-jee-oxygen\eclipse;;.]
[2018-06-22 20:14:05.125][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 20:14:05.125][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 5054 ms
[2018-06-22 20:14:05.790][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 20:14:05.791][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 20:14:05.816][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@261fb838
[2018-06-22 20:14:09.653][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 20:14:09.654][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 20:14:09.654][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 20:14:09.655][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 20:14:09.655][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 20:14:09.656][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 20:14:09.656][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 20:14:09.657][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 20:14:09.657][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 20:14:10.041][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 20:14:10.042][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 20:14:10.324][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 20:14:10.545][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335e83e2: startup date [Fri Jun 22 20:14:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3e3058a7
[2018-06-22 20:14:10.727][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 20:14:10.733][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 20:14:10.734][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 20:14:10.853][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 20:14:10.853][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 20:14:12.302][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 20:14:13.549][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 20:14:13.918][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 20:14:13.942][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 20:14:13.943][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 20:14:13.945][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 20:14:14.208][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 20:14:14.232][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 20:14:14.236][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 20:14:14.240][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 20:14:14.247][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 20:14:14.271][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 20:14:14.385][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=335e83e2,type=ConfigurationPropertiesRebinder]
[2018-06-22 20:14:14.430][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 20:14:14.516][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 20:14:14.672][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 20:14:15.869][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 20:14:15.869][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 20:14:16.088][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 20:14:16.088][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 20:14:16.384][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:14:17.162][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 20:14:17.163][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 20:14:17.165][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 20:14:17.165][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 20:14:17.165][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 20:14:17.166][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 20:14:17.166][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 20:14:17.506][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 20:14:17.513][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 20:14:17.519][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 20:14:17.527][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529669657525 with initial instances count: 1
[2018-06-22 20:14:17.553][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 20:14:17.555][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529669657555, current=UP, previous=STARTING]
[2018-06-22 20:14:17.565][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 20:14:17.645][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 20:14:17.665][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 20:14:18.102][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 20:14:18.157][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 20:14:18.159][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 20:14:18.166][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 21.009 seconds (JVM running for 22.207)
[2018-06-22 20:14:18.174][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 20:19:17.172][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:24:17.175][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:26:19.183][DiscoveryClient-CacheRefreshExecutor-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[91]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
[2018-06-22 20:26:19.192][DiscoveryClient-CacheRefreshExecutor-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:26:19.418][DiscoveryClient-HeartbeatExecutor-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[91]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
[2018-06-22 20:26:19.504][DiscoveryClient-HeartbeatExecutor-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:26:20.343][DiscoveryClient-CacheRefreshExecutor-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[83]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
[2018-06-22 20:26:20.345][DiscoveryClient-CacheRefreshExecutor-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:26:20.361][DiscoveryClient-CacheRefreshExecutor-0][ERROR]com.netflix.discovery.DiscoveryClient[972]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:26:20.510][DiscoveryClient-HeartbeatExecutor-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[83]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
[2018-06-22 20:26:20.512][DiscoveryClient-HeartbeatExecutor-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:26:20.512][DiscoveryClient-HeartbeatExecutor-0][ERROR]com.netflix.discovery.DiscoveryClient[860]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:26:50.617][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[850]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - Re-registering apps/CLOUD-PRODUCT
[2018-06-22 20:26:50.618][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 20:26:50.634][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 20:27:20.408][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 20:27:20.408][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 20:27:20.409][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 20:27:20.409][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 20:27:20.409][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 20:27:20.409][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: false
[2018-06-22 20:27:20.409][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 20:27:20.422][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 20:29:17.178][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:34:17.180][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:35:09.037][Thread-1][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3e3058a7: startup date [Fri Jun 22 20:13:58 CST 2018]; root of context hierarchy
[2018-06-22 20:35:09.041][Thread-1][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335e83e2: startup date [Fri Jun 22 20:14:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3e3058a7
[2018-06-22 20:35:09.045][Thread-1][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 20:35:09.047][Thread-1][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529670909047, current=DOWN, previous=UP]
[2018-06-22 20:35:09.056][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 20:35:09.087][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 20:35:09.119][Thread-1][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 20:35:09.128][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 20:35:09.130][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 20:35:09.287][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 20:35:12.291][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 20:35:12.301][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - deregister  status: 200
[2018-06-22 20:35:12.329][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 20:35:13.643][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@74cd5b77}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 20:35:13 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335e83e2
[2018-06-22 20:35:15.324][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@74cd5b77}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 20:36:49.785][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@49cfea78: startup date [Fri Jun 22 20:36:49 CST 2018]; root of context hierarchy
[2018-06-22 20:36:49.910][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 20:36:49.912][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$499cc606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 20:36:53.980][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 20:36:54.032][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a386977: startup date [Fri Jun 22 20:36:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49cfea78
[2018-06-22 20:37:00.500][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 20:37:00.553][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 20:37:00.664][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$499cc606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 20:37:01.840][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 20:37:01.841][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 20:37:01.842][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 20:37:01.942][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat-2].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 20:37:01.943][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 7911 ms
[2018-06-22 20:37:02.184][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 20:37:02.185][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 20:37:02.186][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7b35daa0
[2018-06-22 20:37:03.805][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 20:37:03.805][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 20:37:03.805][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 20:37:03.805][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 20:37:03.805][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 20:37:03.805][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 20:37:03.805][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 20:37:03.806][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 20:37:03.806][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 20:37:03.858][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 20:37:03.859][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 20:37:04.165][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 20:37:04.296][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a386977: startup date [Fri Jun 22 20:36:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49cfea78
[2018-06-22 20:37:04.353][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 20:37:04.360][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 20:37:04.361][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 20:37:04.621][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 20:37:04.622][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 20:37:05.014][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 20:37:05.706][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 20:37:05.708][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 20:37:05.709][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 20:37:05.710][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 20:37:05.750][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 20:37:05.753][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 20:37:05.754][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 20:37:05.754][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 20:37:05.756][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 20:37:05.759][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 20:37:05.761][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7a386977,type=ConfigurationPropertiesRebinder]
[2018-06-22 20:37:05.770][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 20:37:05.772][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 20:37:05.778][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 20:37:05.780][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 20:37:05.781][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 20:37:05.782][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 20:37:05.782][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 20:37:05.836][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:37:05.838][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 20:37:05.839][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 20:37:05.839][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 20:37:05.839][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 20:37:05.840][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 20:37:05.840][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 20:37:05.840][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 20:37:06.854][restartedMain][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[83]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5105bf25.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5105bf25$$FastClassBySpringCGLIB$$814e88ea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5105bf25.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:579)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1250)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 73 common frames omitted
[2018-06-22 20:37:06.856][restartedMain][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:37:06.857][restartedMain][ERROR]com.netflix.discovery.DiscoveryClient[972]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5105bf25.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5105bf25$$FastClassBySpringCGLIB$$814e88ea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5105bf25.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:579)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1250)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2018-06-22 20:37:06.858][restartedMain][WARN ]com.netflix.discovery.DiscoveryClient[290]-Using default backup registry implementation which does not do anything.
[2018-06-22 20:37:06.860][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 20:37:06.863][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 20:37:06.867][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529671026867 with initial instances count: 0
[2018-06-22 20:37:06.888][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 20:37:06.889][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529671026889, current=UP, previous=STARTING]
[2018-06-22 20:37:06.890][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 20:37:06.919][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 20:37:06.920][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 20:37:06.921][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 22.553 seconds (JVM running for 1390.964)
[2018-06-22 20:37:06.927][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 20:37:06.927][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 20:37:07.894][DiscoveryClient-InstanceInfoReplicator-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[83]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
[2018-06-22 20:37:07.895][DiscoveryClient-InstanceInfoReplicator-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:37:07.896][DiscoveryClient-InstanceInfoReplicator-0][WARN ]com.netflix.discovery.DiscoveryClient[831]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:37:07.896][DiscoveryClient-InstanceInfoReplicator-0][WARN ]com.netflix.discovery.InstanceInfoReplicator[125]-There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:37:36.861][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 20:37:36.861][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 20:37:36.861][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 20:37:36.861][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 20:37:36.861][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 20:37:36.862][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 20:37:36.862][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 20:37:37.866][DiscoveryClient-HeartbeatExecutor-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[83]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
[2018-06-22 20:37:37.866][DiscoveryClient-CacheRefreshExecutor-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[83]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
[2018-06-22 20:37:37.867][DiscoveryClient-HeartbeatExecutor-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:37:37.867][DiscoveryClient-CacheRefreshExecutor-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:37:37.867][DiscoveryClient-CacheRefreshExecutor-0][ERROR]com.netflix.discovery.DiscoveryClient[972]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:37:37.868][DiscoveryClient-HeartbeatExecutor-0][ERROR]com.netflix.discovery.DiscoveryClient[860]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:37:37.897][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 20:37:38.900][DiscoveryClient-InstanceInfoReplicator-0][ERROR]com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient[83]-Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
[2018-06-22 20:37:38.900][DiscoveryClient-InstanceInfoReplicator-0][WARN ]com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient[130]-Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2018-06-22 20:37:38.901][DiscoveryClient-InstanceInfoReplicator-0][WARN ]com.netflix.discovery.DiscoveryClient[831]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:37:38.901][DiscoveryClient-InstanceInfoReplicator-0][WARN ]com.netflix.discovery.InstanceInfoReplicator[125]-There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2018-06-22 20:38:07.873][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 20:38:07.873][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 20:38:07.874][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 20:38:07.874][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 20:38:07.874][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 20:38:07.874][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 20:38:07.874][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 20:38:07.886][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 20:38:07.931][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[850]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - Re-registering apps/CLOUD-PRODUCT
[2018-06-22 20:38:07.931][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 20:38:07.955][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 20:38:37.889][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 20:38:37.889][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 20:38:37.890][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 20:38:37.890][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 20:38:37.890][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 20:38:37.890][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: false
[2018-06-22 20:38:37.890][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 20:38:37.900][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 20:42:05.857][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 20:47:05.883][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:06:42.813][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@46299798: startup date [Fri Jun 22 21:06:42 CST 2018]; root of context hierarchy
[2018-06-22 21:06:43.257][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:06:43.382][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb05ae25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:06:44.434][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 21:06:44.490][restartedMain][INFO ]o.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6144fdb1: startup date [Fri Jun 22 21:06:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46299798
[2018-06-22 21:06:48.226][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=41964fdf-9a84-3cc4-9a41-23cb552b936d
[2018-06-22 21:06:48.273][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:06:49.042][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb05ae25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:06:49.988][restartedMain][INFO ]org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping[468]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 21:06:50.301][restartedMain][INFO ]org.springframework.web.reactive.handler.SimpleUrlHandlerMapping[211]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
[2018-06-22 21:06:50.303][restartedMain][INFO ]org.springframework.web.reactive.handler.SimpleUrlHandlerMapping[211]-Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
[2018-06-22 21:06:53.015][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:06:53.016][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:06:53.065][restartedMain][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2e673660
[2018-06-22 21:06:53.856][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 21:06:53.884][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping[468]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2018-06-22 21:06:53.888][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping[468]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2018-06-22 21:06:53.889][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping[468]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.web.server.ServerWebExchange)
[2018-06-22 21:06:54.258][restartedMain][INFO ]org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver[181]-Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6144fdb1: startup date [Fri Jun 22 21:06:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46299798
[2018-06-22 21:06:55.587][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:06:55.587][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:06:57.902][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 21:06:59.304][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 21:06:59.751][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 21:06:59.775][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 21:06:59.777][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 21:06:59.778][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 21:06:59.786][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 21:06:59.809][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 21:06:59.851][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6144fdb1,type=ConfigurationPropertiesRebinder]
[2018-06-22 21:06:59.883][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 21:06:59.901][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 21:07:00.065][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 21:07:00.712][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 21:07:00.713][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 21:07:00.964][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 21:07:00.964][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 21:07:01.488][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:07:01.843][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 21:07:01.861][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 21:07:01.861][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 21:07:01.862][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 21:07:01.864][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 21:07:01.867][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 21:07:01.868][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 21:07:02.227][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 21:07:02.232][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 21:07:02.241][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 21:07:02.255][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529672822250 with initial instances count: 1
[2018-06-22 21:07:02.280][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 21:07:02.281][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529672822281, current=UP, previous=STARTING]
[2018-06-22 21:07:02.287][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:07:02.389][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:07:03.615][reactor-http-nio-1][INFO ]reactor.ipc.netty.tcp.BlockingNettyContext[238]-Started HttpServer on /0:0:0:0:0:0:0:0:8020
[2018-06-22 21:07:03.617][restartedMain][INFO ]org.springframework.boot.web.embedded.netty.NettyWebServer[83]-Netty started on port(s): 8020
[2018-06-22 21:07:03.628][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 21:07:04.083][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 22.831 seconds (JVM running for 24.36)
[2018-06-22 21:07:04.097][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 21:12:01.872][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:12:53.850][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:23.030][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:23.473][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:23.764][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:23.917][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:24.145][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:24.378][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:24.572][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:24.786][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:24.993][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:25.293][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:25.542][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:25.583][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@30d1ee9f}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 21:13:25 CST 2018]; parent: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6144fdb1
[2018-06-22 21:13:25.712][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:25.755][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@30d1ee9f}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:13:25.896][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:26.079][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:26.295][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:26.386][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@30d1ee9f}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 21:13:26.427][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@30d1ee9f}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 21:13:26.489][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:26.572][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@30d1ee9f}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 21:13:26.588][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@30d1ee9f}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 21:13:26.599][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@30d1ee9f}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6942a42d
[2018-06-22 21:13:26.691][reactor-http-nio-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:13:42.208][reactor-http-nio-3][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://localhost:8020/product/dict/type/list]: Response status 404
[2018-06-22 21:13:42.479][reactor-http-nio-3][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://localhost:8020/favicon.ico]: Response status 404
[2018-06-22 21:14:32.626][Thread-1][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@46299798: startup date [Fri Jun 22 21:06:42 CST 2018]; root of context hierarchy
[2018-06-22 21:14:32.629][Thread-1][INFO ]o.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext[993]-Closing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6144fdb1: startup date [Fri Jun 22 21:06:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@46299798
[2018-06-22 21:14:32.631][Thread-1][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 21:14:32.632][Thread-1][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529673272632, current=DOWN, previous=UP]
[2018-06-22 21:14:32.633][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:14:32.636][Thread-1][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 21:14:32.643][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:14:33.652][Thread-1][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 21:13:25 CST 2018]; parent: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6144fdb1
[2018-06-22 21:14:33.659][Thread-1][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[67]-Shutdown hook removed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 21:14:33.686][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 21:14:33.689][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 21:14:33.728][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 21:14:36.733][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 21:14:36.780][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - deregister  status: 200
[2018-06-22 21:14:36.821][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 21:14:36.976][Thread-1][INFO ]reactor.ipc.netty.tcp.BlockingNettyContext[238]-Stopped HttpServer on /0:0:0:0:0:0:0:0:8020
[2018-06-22 21:14:38.165][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41a20ba6: startup date [Fri Jun 22 21:14:38 CST 2018]; root of context hierarchy
[2018-06-22 21:14:38.192][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:14:38.199][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb05ae25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:14:39.131][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 21:14:39.152][restartedMain][INFO ]o.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@52d1ad1: startup date [Fri Jun 22 21:14:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41a20ba6
[2018-06-22 21:14:41.427][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=41964fdf-9a84-3cc4-9a41-23cb552b936d
[2018-06-22 21:14:41.445][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:14:41.505][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb05ae25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:14:41.830][restartedMain][INFO ]org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping[468]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 21:14:41.874][restartedMain][INFO ]org.springframework.web.reactive.handler.SimpleUrlHandlerMapping[211]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
[2018-06-22 21:14:41.875][restartedMain][INFO ]org.springframework.web.reactive.handler.SimpleUrlHandlerMapping[211]-Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]
[2018-06-22 21:14:43.526][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:14:43.529][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:14:43.535][restartedMain][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@57218ee4
[2018-06-22 21:14:43.823][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 21:14:43.827][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping[468]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2018-06-22 21:14:43.830][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping[468]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public org.reactivestreams.Publisher<org.springframework.http.ResponseEntity<java.lang.Object>> org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler.handle(org.springframework.web.server.ServerWebExchange)
[2018-06-22 21:14:43.832][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping[468]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.links(org.springframework.web.server.ServerWebExchange)
[2018-06-22 21:14:43.961][restartedMain][INFO ]org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver[181]-Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@52d1ad1: startup date [Fri Jun 22 21:14:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41a20ba6
[2018-06-22 21:14:44.177][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:14:44.178][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:14:44.722][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 21:14:45.665][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 21:14:45.668][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 21:14:45.669][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 21:14:45.670][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 21:14:45.679][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 21:14:45.683][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 21:14:45.688][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=52d1ad1,type=ConfigurationPropertiesRebinder]
[2018-06-22 21:14:45.699][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 21:14:45.701][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 21:14:45.708][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 21:14:45.714][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 21:14:45.715][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 21:14:45.715][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 21:14:45.715][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 21:14:45.935][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:14:45.949][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 21:14:45.950][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 21:14:45.950][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 21:14:45.950][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 21:14:45.950][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 21:14:45.951][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 21:14:45.951][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 21:14:45.963][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 21:14:45.964][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 21:14:45.966][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 21:14:45.967][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529673285967 with initial instances count: 2
[2018-06-22 21:14:45.979][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 21:14:45.979][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529673285979, current=UP, previous=STARTING]
[2018-06-22 21:14:45.985][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:14:46.007][restartedMain][INFO ]reactor.ipc.netty.tcp.BlockingNettyContext[238]-Started HttpServer on /0:0:0:0:0:0:0:0:8020
[2018-06-22 21:14:46.008][restartedMain][INFO ]org.springframework.boot.web.embedded.netty.NettyWebServer[83]-Netty started on port(s): 8020
[2018-06-22 21:14:46.009][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 21:14:46.011][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 8.556 seconds (JVM running for 486.739)
[2018-06-22 21:14:46.012][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:14:46.020][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 21:14:46.020][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 21:14:53.784][reactor-http-nio-2][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://localhost:8020/product/dict/type/list]: Response status 404
[2018-06-22 21:14:54.375][reactor-http-nio-2][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://localhost:8020/product/dict/type/list]: Response status 404
[2018-06-22 21:14:54.569][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4ac1bc4e}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 21:14:54 CST 2018]; parent: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@52d1ad1
[2018-06-22 21:14:54.610][reactor-http-nio-2][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://localhost:8020/product/dict/type/list]: Response status 404
[2018-06-22 21:14:54.669][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4ac1bc4e}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:14:54.723][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4ac1bc4e}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 21:14:54.728][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4ac1bc4e}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 21:14:54.729][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4ac1bc4e}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 21:14:54.733][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4ac1bc4e}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 21:14:54.737][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4ac1bc4e}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@26dfd17f
[2018-06-22 21:14:54.815][reactor-http-nio-2][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://localhost:8020/product/dict/type/list]: Response status 404
[2018-06-22 21:14:54.986][reactor-http-nio-2][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://localhost:8020/product/dict/type/list]: Response status 404
[2018-06-22 21:14:56.203][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:14:56.821][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:14:57.095][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:14:57.288][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:14:57.457][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:14:57.607][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:14:57.810][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:15:44.118][reactor-http-nio-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:15:51.475][reactor-http-nio-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:15:51.649][reactor-http-nio-1][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://192.168.1.4:8020/favicon.ico]: Response status 404
[2018-06-22 21:16:28.667][reactor-http-nio-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:16:29.010][reactor-http-nio-3][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://192.168.1.4:8020/favicon.ico]: Response status 404
[2018-06-22 21:16:29.023][reactor-http-nio-4][WARN ]org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler[212]-Failed to handle request [GET http://192.168.1.4:8020/favicon.ico]: Response status 404
[2018-06-22 21:16:29.054][reactor-http-nio-4][ERROR]org.springframework.web.server.adapter.HttpWebHandlerAdapter[213]-Unhandled failure: 你的主机中的软件中止了一个已建立的连接。, response already set (status=404)
[2018-06-22 21:16:29.065][reactor-http-nio-4][ERROR]org.springframework.http.server.reactive.ReactorHttpHandlerAdapter[76]-Handling completed with error
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onComplete(ChannelSendOperator.java:220)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:138)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:265)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1632)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onSubscribe(ChannelSendOperator.java:163)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.FluxSourceMonoFuseable.subscribe(FluxSourceMonoFuseable.java:38)
	at reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at org.springframework.http.server.reactive.ChannelSendOperator.subscribe(ChannelSendOperator.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.Operators.complete(Operators.java:125)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:222)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onError(FluxContextStart.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators.error(Operators.java:175)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:33)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:1313)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators.error(Operators.java:175)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:349)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:265)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:254)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:232)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:381)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:748)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoLift] :
	reactor.core.publisher.Mono.then(Mono.java:3302)
	reactor.core.publisher.Mono.thenEmpty(Mono.java:3329)
	reactor.ipc.netty.ReactorNetty$OutboundThen.<init>(ReactorNetty.java:253)
	reactor.ipc.netty.NettyOutbound.then(NettyOutbound.java:378)
	reactor.ipc.netty.NettyOutbound.sendObject(NettyOutbound.java:296)
	reactor.ipc.netty.NettyOutbound.send(NettyOutbound.java:156)
	org.springframework.http.server.reactive.ReactorServerHttpResponse.writeWithInternal(ReactorServerHttpResponse.java:74)
	org.springframework.http.server.reactive.AbstractServerHttpResponse.lambda$null$0(AbstractServerHttpResponse.java:176)
	java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	org.springframework.http.server.reactive.AbstractServerHttpResponse.doCommit(AbstractServerHttpResponse.java:225)
	org.springframework.http.server.reactive.AbstractServerHttpResponse.lambda$writeWith$1(AbstractServerHttpResponse.java:176)
	org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onNext(ChannelSendOperator.java:181)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onSubscribe(ChannelSendOperator.java:163)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.FluxSourceMonoFuseable.subscribe(FluxSourceMonoFuseable.java:38)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	org.springframework.http.server.reactive.ChannelSendOperator.subscribe(ChannelSendOperator.java:74)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.Operators.complete(Operators.java:125)
	reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:222)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onError(FluxContextStart.java:117)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators.error(Operators.java:175)
	reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:33)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:1313)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators.error(Operators.java:175)
	reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:349)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:265)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:254)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:241)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:232)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:381)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
Error has been observed by the following operator(s):
	|_	Mono.thenEmpty(ReactorNetty.java:253)
	|_	Flux.concat(AbstractServerHttpResponse.java:227)
	|_	Flux.then(AbstractServerHttpResponse.java:227)
	|_	Mono.flatMap(AbstractErrorWebExceptionHandler.java:242)
	|_	Mono.onErrorResume(ExceptionHandlingWebHandler.java:68)
	|_	Mono.error(ResponseStatusExceptionHandler.java:57)
	|_	Mono.onErrorResume(ExceptionHandlingWebHandler.java:68)
	|_	Mono.error(HttpWebHandlerAdapter.java:214)
	|_	Mono.onErrorResume(HttpWebHandlerAdapter.java:185)
	|_	Mono.then(HttpWebHandlerAdapter.java:186)

[2018-06-22 21:16:29.084][reactor-http-nio-4][ERROR]reactor.ipc.netty.channel.ChannelOperations[283]-[HttpServer] Error processing connection. Requesting close the channel
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at reactor.ipc.netty.channel.ChannelOperationsHandler$PublisherSender.onComplete(ChannelOperationsHandler.java:535)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onComplete(FluxContextStart.java:122)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:130)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onComplete(ChannelSendOperator.java:220)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:138)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:265)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1632)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onSubscribe(ChannelSendOperator.java:163)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.FluxSourceMonoFuseable.subscribe(FluxSourceMonoFuseable.java:38)
	at reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at org.springframework.http.server.reactive.ChannelSendOperator.subscribe(ChannelSendOperator.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.Operators.complete(Operators.java:125)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:222)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onError(FluxContextStart.java:117)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators.error(Operators.java:175)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:33)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:1313)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:455)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	at reactor.core.publisher.Operators.error(Operators.java:175)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:349)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:265)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:460)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:254)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:241)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:232)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:252)
	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:532)
	at reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:516)
	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71)
	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76)
	at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:381)
	at reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
	at java.lang.Thread.run(Thread.java:748)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoLift] :
	reactor.core.publisher.Mono.then(Mono.java:3302)
	reactor.core.publisher.Mono.thenEmpty(Mono.java:3329)
	reactor.ipc.netty.ReactorNetty$OutboundThen.<init>(ReactorNetty.java:253)
	reactor.ipc.netty.NettyOutbound.then(NettyOutbound.java:378)
	reactor.ipc.netty.NettyOutbound.sendObject(NettyOutbound.java:296)
	reactor.ipc.netty.NettyOutbound.send(NettyOutbound.java:156)
	org.springframework.http.server.reactive.ReactorServerHttpResponse.writeWithInternal(ReactorServerHttpResponse.java:74)
	org.springframework.http.server.reactive.AbstractServerHttpResponse.lambda$null$0(AbstractServerHttpResponse.java:176)
	java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	org.springframework.http.server.reactive.AbstractServerHttpResponse.doCommit(AbstractServerHttpResponse.java:225)
	org.springframework.http.server.reactive.AbstractServerHttpResponse.lambda$writeWith$1(AbstractServerHttpResponse.java:176)
	org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onNext(ChannelSendOperator.java:181)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.onSubscribe(ChannelSendOperator.java:163)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.FluxSourceMonoFuseable.subscribe(FluxSourceMonoFuseable.java:38)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	org.springframework.http.server.reactive.ChannelSendOperator.subscribe(ChannelSendOperator.java:74)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:198)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.Operators.complete(Operators.java:125)
	reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:222)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onError(FluxContextStart.java:117)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators.error(Operators.java:175)
	reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoCurrentContext.subscribe(MonoCurrentContext.java:33)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:270)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185)
	reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1116)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:229)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:1313)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:86)
	reactor.core.publisher.Operators.error(Operators.java:175)
	reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:96)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:349)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onComplete(FluxConcatMap.java:265)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:254)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:271)
	reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:803)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1444)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1318)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:418)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:241)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:232)
	reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:190)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:227)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:128)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:61)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121)
	reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46)
	reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1073)
	reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:241)
	reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:323)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69)
	reactor.core.publisher.MonoZip$ZipInner.onSubscribe(MonoZip.java:312)
	org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61)
	reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46)
	reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:381)
	reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart(HttpServerOperations.java:397)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)
Error has been observed by the following operator(s):
	|_	Mono.thenEmpty(ReactorNetty.java:253)
	|_	Flux.concat(AbstractServerHttpResponse.java:227)
	|_	Flux.then(AbstractServerHttpResponse.java:227)
	|_	Mono.flatMap(AbstractErrorWebExceptionHandler.java:242)
	|_	Mono.onErrorResume(ExceptionHandlingWebHandler.java:68)
	|_	Mono.error(ResponseStatusExceptionHandler.java:57)
	|_	Mono.onErrorResume(ExceptionHandlingWebHandler.java:68)
	|_	Mono.error(HttpWebHandlerAdapter.java:214)
	|_	Mono.onErrorResume(HttpWebHandlerAdapter.java:185)
	|_	Mono.then(HttpWebHandlerAdapter.java:186)
	|_	Mono.doOnError(ReactorHttpHandlerAdapter.java:76)
	|_	Mono.doOnSuccess(ReactorHttpHandlerAdapter.java:77)

[2018-06-22 21:17:47.357][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ca4e31e: startup date [Fri Jun 22 21:17:47 CST 2018]; root of context hierarchy
[2018-06-22 21:17:47.954][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:17:48.207][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$886907fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:17:49.533][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 21:17:49.658][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53995438: startup date [Fri Jun 22 21:17:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ca4e31e
[2018-06-22 21:17:55.152][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 21:17:55.184][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:17:56.673][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$886907fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:17:58.494][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 21:17:58.520][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:17:58.567][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 21:17:58.570][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 21:17:58.594][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;D:\Program Files\Java\jdk1.8.0_161\bin;D:\Program Files\Java\jdk1.8.0_161\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Git\cmd;D:\ProgramData\apache-maven-3.5.0\bin;D:\ProgramData\scala\bin;D:\Program Files\nodejs\;D:\ProgramData\Python\Scripts\;D:\ProgramData\Python\;C:\Users\26223\AppData\Local\Microsoft\WindowsApps;C:\Users\26223\AppData\Roaming\npm;D:\ProgramData\eclipse-jee-oxygen\eclipse;;.]
[2018-06-22 21:17:59.144][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 21:17:59.144][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 9486 ms
[2018-06-22 21:18:00.189][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:18:00.190][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:18:00.237][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4cbcf963
[2018-06-22 21:18:05.182][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 21:18:05.183][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 21:18:05.184][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 21:18:05.184][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 21:18:05.185][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 21:18:05.186][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 21:18:05.186][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 21:18:05.186][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 21:18:05.187][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 21:18:05.605][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:18:05.606][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:18:05.936][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:18:06.220][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53995438: startup date [Fri Jun 22 21:17:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ca4e31e
[2018-06-22 21:18:06.457][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 21:18:06.467][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 21:18:06.470][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:18:06.769][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:18:06.774][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:18:08.667][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 21:18:10.024][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 21:18:10.463][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 21:18:10.548][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:18:10.551][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:18:10.554][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:18:10.887][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 21:18:10.908][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 21:18:10.911][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 21:18:10.912][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 21:18:10.922][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 21:18:10.962][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 21:18:11.004][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=53995438,type=ConfigurationPropertiesRebinder]
[2018-06-22 21:18:11.032][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 21:18:11.055][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 21:18:11.190][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 21:18:11.846][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 21:18:11.847][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 21:18:12.111][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 21:18:12.113][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 21:18:12.730][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:18:13.135][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 21:18:13.135][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 21:18:13.136][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 21:18:13.136][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 21:18:13.137][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 21:18:13.137][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 21:18:13.138][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 21:18:13.575][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 21:18:13.582][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 21:18:13.902][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 21:18:13.913][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529673493911 with initial instances count: 2
[2018-06-22 21:18:13.935][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 21:18:13.936][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529673493936, current=UP, previous=STARTING]
[2018-06-22 21:18:13.939][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:18:14.020][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:18:14.027][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:18:14.043][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 21:18:14.107][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 21:18:14.110][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 21:18:14.126][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 29.047 seconds (JVM running for 30.733)
[2018-06-22 21:18:14.174][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 21:18:44.767][http-nio-8020-exec-8][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 21:18:44.769][http-nio-8020-exec-8][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 21:18:44.839][http-nio-8020-exec-8][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
[2018-06-22 21:18:44.938][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:20:21.170][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:20:21.521][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:20:21.721][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:20:21.918][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:20:22.129][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:22:12.429][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:22:13.298][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:22:13.414][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4463c6dc}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 21:22:13 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53995438
[2018-06-22 21:22:13.553][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4463c6dc}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:22:13.658][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:22:13.849][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:22:14.124][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4463c6dc}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 21:22:14.195][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4463c6dc}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 21:22:14.291][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4463c6dc}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 21:22:14.309][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4463c6dc}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 21:22:14.325][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4463c6dc}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7bd5d0a2
[2018-06-22 21:23:13.143][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:49:34.715][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a3dd463: startup date [Fri Jun 22 21:49:34 CST 2018]; root of context hierarchy
[2018-06-22 21:49:35.197][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:49:35.279][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b405238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:49:36.303][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 21:49:36.368][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef5a5d5: startup date [Fri Jun 22 21:49:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2a3dd463
[2018-06-22 21:49:40.487][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 21:49:40.542][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:49:41.779][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b405238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:49:43.546][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 21:49:43.574][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:49:43.602][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 21:49:43.604][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 21:49:43.626][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;D:\Program Files\Java\jdk1.8.0_161\bin;D:\Program Files\Java\jdk1.8.0_161\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Git\cmd;D:\ProgramData\apache-maven-3.5.0\bin;D:\ProgramData\scala\bin;D:\Program Files\nodejs\;D:\ProgramData\Python\Scripts\;D:\ProgramData\Python\;C:\Users\26223\AppData\Local\Microsoft\WindowsApps;C:\Users\26223\AppData\Roaming\npm;D:\ProgramData\eclipse-jee-oxygen\eclipse;;.]
[2018-06-22 21:49:43.961][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 21:49:43.961][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 7593 ms
[2018-06-22 21:49:44.918][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:49:44.919][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:49:44.955][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6637c55a
[2018-06-22 21:49:50.592][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 21:49:50.594][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 21:49:50.594][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 21:49:50.595][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 21:49:50.595][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 21:49:50.596][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 21:49:50.596][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 21:49:50.596][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 21:49:50.596][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 21:49:51.031][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:49:51.031][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:49:51.411][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:49:51.703][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef5a5d5: startup date [Fri Jun 22 21:49:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2a3dd463
[2018-06-22 21:49:51.943][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 21:49:51.950][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 21:49:51.952][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:49:52.142][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:49:52.143][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:49:54.290][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 21:49:55.864][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 21:49:56.288][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 21:49:56.364][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:49:56.368][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:49:56.373][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:49:56.828][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 21:49:56.855][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 21:49:56.857][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 21:49:56.859][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 21:49:56.868][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 21:49:56.894][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 21:49:56.980][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3ef5a5d5,type=ConfigurationPropertiesRebinder]
[2018-06-22 21:49:57.008][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 21:49:57.025][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 21:49:57.168][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 21:49:58.291][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 21:49:58.291][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 21:49:58.668][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 21:49:58.670][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 21:49:59.409][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:49:59.938][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 21:49:59.939][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 21:49:59.941][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 21:49:59.941][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 21:49:59.942][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 21:49:59.942][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 21:49:59.943][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 21:50:00.609][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 21:50:00.615][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 21:50:00.626][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 21:50:00.635][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529675400632 with initial instances count: 1
[2018-06-22 21:50:00.726][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 21:50:00.728][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529675400728, current=UP, previous=STARTING]
[2018-06-22 21:50:00.739][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:50:01.787][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:50:01.967][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:50:02.062][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 21:50:02.405][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path '/product'
[2018-06-22 21:50:02.410][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 21:50:02.437][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 29.809 seconds (JVM running for 31.519)
[2018-06-22 21:50:02.557][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 21:50:11.896][http-nio-8020-exec-10][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/product][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 21:50:11.896][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 21:50:11.967][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
[2018-06-22 21:50:12.096][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:50:12.852][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:50:13.117][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:50:13.302][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:50:13.478][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:50:13.660][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:50:13.771][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@46438205}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 21:50:13 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef5a5d5
[2018-06-22 21:50:13.898][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@46438205}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:50:14.348][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@46438205}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 21:50:14.397][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@46438205}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 21:50:14.463][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@46438205}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 21:50:14.481][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@46438205}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 21:50:14.495][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@46438205}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2431810a
[2018-06-22 21:53:49.523][Thread-1][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a3dd463: startup date [Fri Jun 22 21:49:34 CST 2018]; root of context hierarchy
[2018-06-22 21:53:49.525][Thread-1][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef5a5d5: startup date [Fri Jun 22 21:49:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2a3dd463
[2018-06-22 21:53:49.527][Thread-1][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 21:53:49.529][Thread-1][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529675629529, current=DOWN, previous=UP]
[2018-06-22 21:53:49.529][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:53:49.533][Thread-1][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 21:53:49.542][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 21:53:49.546][Thread-1][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 21:53:49.581][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:53:49.608][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 21:53:52.616][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 21:53:52.632][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - deregister  status: 200
[2018-06-22 21:53:52.657][Thread-1][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 21:53:53.663][Thread-1][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[993]-Closing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 21:50:13 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef5a5d5
[2018-06-22 21:53:53.667][Thread-1][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[1003]-Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:291)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:182)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:144)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:406)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1000)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:577)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:549)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:510)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:100)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:85)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1000)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:310)
	at org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:250)
	at org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:632)
[2018-06-22 21:53:53.668][Thread-1][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[67]-Shutdown hook removed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 21:53:55.055][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@13b3c719: startup date [Fri Jun 22 21:53:55 CST 2018]; root of context hierarchy
[2018-06-22 21:53:55.087][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:53:55.091][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b405238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:53:55.956][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 21:53:55.965][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@305ec709: startup date [Fri Jun 22 21:53:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@13b3c719
[2018-06-22 21:53:58.919][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 21:53:58.935][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:53:59.010][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b405238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:53:59.620][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 21:53:59.622][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:53:59.623][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 21:53:59.624][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 21:53:59.724][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 21:53:59.725][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 3761 ms
[2018-06-22 21:54:00.090][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:54:00.091][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:54:00.093][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6bf4734
[2018-06-22 21:54:02.215][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 21:54:02.220][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 21:54:02.221][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 21:54:02.221][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 21:54:02.221][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 21:54:02.222][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 21:54:02.222][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 21:54:02.223][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 21:54:02.223][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 21:54:02.375][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:54:02.375][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:54:02.577][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:54:02.718][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@305ec709: startup date [Fri Jun 22 21:53:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@13b3c719
[2018-06-22 21:54:02.775][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 21:54:02.777][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 21:54:02.777][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:54:02.895][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:54:02.895][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:54:03.638][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 21:54:04.543][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 21:54:04.547][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:54:04.548][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:54:04.548][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:54:04.656][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 21:54:04.664][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 21:54:04.667][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 21:54:04.669][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 21:54:04.682][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 21:54:04.691][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 21:54:04.697][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=305ec709,type=ConfigurationPropertiesRebinder]
[2018-06-22 21:54:04.713][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 21:54:04.716][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 21:54:04.726][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 21:54:04.732][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 21:54:04.733][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 21:54:04.733][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 21:54:04.734][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 21:54:04.976][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:54:04.986][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 21:54:04.987][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 21:54:04.987][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 21:54:04.988][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 21:54:04.989][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 21:54:04.989][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 21:54:04.990][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 21:54:04.998][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 21:54:04.999][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 21:54:05.000][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 21:54:05.002][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529675645002 with initial instances count: 1
[2018-06-22 21:54:05.021][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 21:54:05.022][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529675645022, current=UP, previous=STARTING]
[2018-06-22 21:54:05.036][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:54:05.050][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:54:05.057][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:54:05.059][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 21:54:05.078][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 21:54:05.107][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 21:54:05.120][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 10.666 seconds (JVM running for 274.203)
[2018-06-22 21:54:05.130][restartedMain][INFO ]org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[56]-Condition evaluation unchanged
[2018-06-22 21:54:05.131][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 21:54:19.587][http-nio-8020-exec-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 21:54:19.588][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 21:54:19.617][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
[2018-06-22 21:54:25.538][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:54:26.497][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:54:26.719][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:54:27.403][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5a7ce623}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 21:54:27 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@305ec709
[2018-06-22 21:54:27.479][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5a7ce623}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:54:27.542][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5a7ce623}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 21:54:27.552][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5a7ce623}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 21:54:27.554][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5a7ce623}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 21:54:27.555][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5a7ce623}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 21:54:27.558][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5a7ce623}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@771c299d
[2018-06-22 21:54:40.400][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:56:17.869][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:56:20.071][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:56:20.262][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:56:20.432][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:56:20.608][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:56:22.482][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:56:22.642][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 21:59:01.025][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@691e2cfb: startup date [Fri Jun 22 21:59:01 CST 2018]; root of context hierarchy
[2018-06-22 21:59:01.404][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:59:01.482][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$55dafdae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:59:02.486][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 21:59:02.536][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319a2854: startup date [Fri Jun 22 21:59:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@691e2cfb
[2018-06-22 21:59:05.331][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 21:59:05.359][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 21:59:06.057][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$55dafdae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 21:59:07.265][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 21:59:07.285][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:59:07.299][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 21:59:07.300][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 21:59:07.311][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;D:\Program Files\Java\jdk1.8.0_161\bin;D:\Program Files\Java\jdk1.8.0_161\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Git\cmd;D:\ProgramData\apache-maven-3.5.0\bin;D:\ProgramData\scala\bin;D:\Program Files\nodejs\;D:\ProgramData\Python\Scripts\;D:\ProgramData\Python\;C:\Users\26223\AppData\Local\Microsoft\WindowsApps;C:\Users\26223\AppData\Roaming\npm;D:\ProgramData\eclipse-jee-oxygen\eclipse;;.]
[2018-06-22 21:59:07.536][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 21:59:07.537][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 5001 ms
[2018-06-22 21:59:08.245][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:59:08.245][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:59:08.275][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f2a31a7
[2018-06-22 21:59:12.924][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 21:59:12.925][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 21:59:12.925][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 21:59:12.926][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 21:59:12.926][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 21:59:12.926][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 21:59:12.927][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 21:59:12.927][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 21:59:12.927][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 21:59:13.337][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 21:59:13.338][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 21:59:13.665][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:59:13.928][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319a2854: startup date [Fri Jun 22 21:59:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@691e2cfb
[2018-06-22 21:59:14.101][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 21:59:14.107][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 21:59:14.108][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:59:14.234][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:59:14.234][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 21:59:15.807][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 21:59:17.157][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 21:59:17.509][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 21:59:17.536][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:59:17.539][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 21:59:17.540][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 21:59:17.672][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 21:59:17.686][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 21:59:17.690][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 21:59:17.691][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 21:59:17.698][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 21:59:17.712][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 21:59:17.746][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=319a2854,type=ConfigurationPropertiesRebinder]
[2018-06-22 21:59:17.804][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 21:59:17.821][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 21:59:17.907][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 21:59:18.510][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 21:59:18.511][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 21:59:18.742][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 21:59:18.743][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 21:59:19.076][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 21:59:19.481][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 21:59:19.482][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 21:59:19.482][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 21:59:19.483][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 21:59:19.483][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 21:59:19.484][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 21:59:19.484][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 21:59:19.881][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 21:59:19.887][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 21:59:19.894][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 21:59:19.902][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529675959900 with initial instances count: 1
[2018-06-22 21:59:19.925][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 21:59:19.926][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529675959926, current=UP, previous=STARTING]
[2018-06-22 21:59:19.930][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 21:59:20.012][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 21:59:20.037][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 21:59:20.423][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 21:59:20.453][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 21:59:20.455][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 21:59:20.460][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 21.197 seconds (JVM running for 22.385)
[2018-06-22 21:59:20.466][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 21:59:31.081][http-nio-8020-exec-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 21:59:31.082][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 21:59:31.147][http-nio-8020-exec-1][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
[2018-06-22 21:59:31.267][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:00:35.912][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:01:57.097][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@76c2512: startup date [Fri Jun 22 22:01:57 CST 2018]; root of context hierarchy
[2018-06-22 22:01:57.509][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 22:01:57.595][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb59a0a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 22:01:58.649][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 22:01:58.693][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434f687: startup date [Fri Jun 22 22:01:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@76c2512
[2018-06-22 22:02:02.302][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 22:02:02.329][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 22:02:03.083][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb59a0a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 22:02:04.633][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 22:02:04.654][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 22:02:04.671][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 22:02:04.672][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 22:02:04.685][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;D:\Program Files\Java\jdk1.8.0_161\bin;D:\Program Files\Java\jdk1.8.0_161\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Git\cmd;D:\ProgramData\apache-maven-3.5.0\bin;D:\ProgramData\scala\bin;D:\Program Files\nodejs\;D:\ProgramData\Python\Scripts\;D:\ProgramData\Python\;C:\Users\26223\AppData\Local\Microsoft\WindowsApps;C:\Users\26223\AppData\Roaming\npm;D:\ProgramData\eclipse-jee-oxygen\eclipse;;.]
[2018-06-22 22:02:04.943][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 22:02:04.943][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 6251 ms
[2018-06-22 22:02:05.794][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 22:02:05.795][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 22:02:05.873][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@709836de
[2018-06-22 22:02:10.565][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 22:02:10.566][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 22:02:10.567][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 22:02:10.567][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 22:02:10.567][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 22:02:10.568][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 22:02:10.568][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 22:02:10.568][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 22:02:10.569][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 22:02:10.937][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 22:02:10.937][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 22:02:11.236][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 22:02:11.473][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434f687: startup date [Fri Jun 22 22:01:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@76c2512
[2018-06-22 22:02:11.671][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 22:02:11.675][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 22:02:11.677][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 22:02:11.827][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 22:02:11.828][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 22:02:13.805][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 22:02:15.130][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 22:02:15.546][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 22:02:15.580][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 22:02:15.582][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 22:02:15.584][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 22:02:15.849][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 22:02:15.869][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 22:02:15.872][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 22:02:15.873][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 22:02:15.880][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 22:02:15.898][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 22:02:15.932][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=434f687,type=ConfigurationPropertiesRebinder]
[2018-06-22 22:02:15.961][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 22:02:15.985][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 22:02:16.086][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 22:02:16.797][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 22:02:16.798][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 22:02:17.048][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 22:02:17.049][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 22:02:17.573][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 22:02:18.351][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 22:02:18.351][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 22:02:18.352][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 22:02:18.352][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 22:02:18.353][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 22:02:18.353][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 22:02:18.354][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 22:02:18.804][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 22:02:18.810][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 22:02:18.820][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 22:02:18.830][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529676138827 with initial instances count: 2
[2018-06-22 22:02:18.868][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 22:02:18.869][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529676138869, current=UP, previous=STARTING]
[2018-06-22 22:02:18.873][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 22:02:19.553][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 22:02:19.574][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 22:02:19.586][restartedMain][ERROR]org.apache.catalina.core.StandardService[182]-Failed to start connector [Connector[HTTP/1.1-8020]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8020]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.tykj.cloud.producter.ProducterApplication.main(ProducterApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 19 common frames omitted
[2018-06-22 22:02:19.632][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Pausing ProtocolHandler ["http-nio-8020"]
[2018-06-22 22:02:19.633][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Stopping service [Tomcat]
[2018-06-22 22:02:19.643][localhost-startStop-1][WARN ]org.apache.catalina.loader.WebappClassLoaderBase[180]-The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@c71aee1}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
[2018-06-22 22:02:19.645][localhost-startStop-1][WARN ]org.apache.catalina.loader.WebappClassLoaderBase[180]-The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[2018-06-22 22:02:19.646][localhost-startStop-1][WARN ]org.apache.catalina.loader.WebappClassLoaderBase[180]-The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[2018-06-22 22:02:19.718][restartedMain][INFO ]org.apache.catalina.util.LifecycleBase[180]-The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
[2018-06-22 22:02:19.719][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Stopping ProtocolHandler ["http-nio-8020"]
[2018-06-22 22:02:19.720][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Destroying ProtocolHandler ["http-nio-8020"]
[2018-06-22 22:02:19.736][restartedMain][INFO ]org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener[101]-

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2018-06-22 22:02:19.763][restartedMain][ERROR]org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter[42]-

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8020 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8020, or configure this application to listen on another port.

[2018-06-22 22:02:19.767][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[993]-Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434f687: startup date [Fri Jun 22 22:01:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@76c2512
[2018-06-22 22:02:19.769][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[65]-Unregistering application cloud-product with eureka with status DOWN
[2018-06-22 22:02:19.773][restartedMain][WARN ]com.netflix.discovery.DiscoveryClient[1297]-Saw local status change event StatusChangeEvent [timestamp=1529676139773, current=DOWN, previous=UP]
[2018-06-22 22:02:19.777][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[366]-Stopping beans in phase 0
[2018-06-22 22:02:19.786][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 22:02:19.788][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[451]-Unregistering JMX-exposed beans on shutdown
[2018-06-22 22:02:19.918][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[183]-Unregistering JMX-exposed beans
[2018-06-22 22:02:20.204][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[888]-Shutting down DiscoveryClient ...
[2018-06-22 22:02:20.549][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 22:02:20.551][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[922]-Unregistering ...
[2018-06-22 22:02:20.560][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[924]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - deregister  status: 200
[2018-06-22 22:02:20.576][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[911]-Completed shut down of DiscoveryClient
[2018-06-22 22:02:20.647][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@c71aee1}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 22:02:20 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434f687
[2018-06-22 22:02:20.654][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@c71aee1}][WARN ]org.springframework.context.annotation.AnnotationConfigApplicationContext[558]-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
[2018-06-22 22:02:50.555][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[850]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - Re-registering apps/CLOUD-PRODUCT
[2018-06-22 22:02:50.556][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 22:02:50.564][DiscoveryClient-HeartbeatExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 22:04:19.488][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 22:06:30.829][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:06:33.351][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:06:34.369][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:07:05.995][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:07:06.768][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:07:07.077][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a587f7c}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 22:07:07 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@319a2854
[2018-06-22 22:07:07.137][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:07:07.307][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:07:07.543][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a587f7c}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 22:07:07.914][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a587f7c}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 22:07:07.963][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a587f7c}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 22:07:08.010][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a587f7c}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 22:07:08.022][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a587f7c}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 22:07:08.030][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a587f7c}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3605f342
[2018-06-22 22:09:06.532][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:09:09.206][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:09:11.761][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:09:19.489][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 22:14:00.206][restartedMain][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6393d144: startup date [Fri Jun 22 22:14:00 CST 2018]; root of context hierarchy
[2018-06-22 22:14:00.559][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 22:14:00.643][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bfe7928b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 22:14:01.497][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[659]-No active profile set, falling back to default profiles: default
[2018-06-22 22:14:01.546][restartedMain][INFO ]org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[590]-Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22b658fa: startup date [Fri Jun 22 22:14:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6393d144
[2018-06-22 22:14:04.381][restartedMain][INFO ]org.springframework.cloud.context.scope.GenericScope[294]-BeanFactory id=bdff467e-e482-331a-bc9b-a5c6029fca40
[2018-06-22 22:14:04.405][restartedMain][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 22:14:05.148][restartedMain][INFO ]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[328]-Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bfe7928b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-06-22 22:14:06.388][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[91]-Tomcat initialized with port(s): 8020 (http)
[2018-06-22 22:14:06.405][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Initializing ProtocolHandler ["http-nio-8020"]
[2018-06-22 22:14:06.419][restartedMain][INFO ]org.apache.catalina.core.StandardService[180]-Starting service [Tomcat]
[2018-06-22 22:14:06.419][restartedMain][INFO ]org.apache.catalina.core.StandardEngine[180]-Starting Servlet Engine: Apache Tomcat/8.5.29
[2018-06-22 22:14:06.431][localhost-startStop-1][INFO ]org.apache.catalina.core.AprLifecycleListener[180]-The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;D:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;D:\Program Files\Java\jdk1.8.0_161\bin;D:\Program Files\Java\jdk1.8.0_161\jre\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Git\cmd;D:\ProgramData\apache-maven-3.5.0\bin;D:\ProgramData\scala\bin;D:\Program Files\nodejs\;D:\ProgramData\Python\Scripts\;D:\ProgramData\Python\;C:\Users\26223\AppData\Local\Microsoft\WindowsApps;C:\Users\26223\AppData\Roaming\npm;D:\ProgramData\eclipse-jee-oxygen\eclipse;;.]
[2018-06-22 22:14:06.656][localhost-startStop-1][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring embedded WebApplicationContext
[2018-06-22 22:14:06.656][localhost-startStop-1][INFO ]org.springframework.web.context.ContextLoader[285]-Root WebApplicationContext: initialization completed in 5110 ms
[2018-06-22 22:14:07.354][localhost-startStop-1][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 22:14:07.354][localhost-startStop-1][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 22:14:07.379][localhost-startStop-1][INFO ]com.netflix.config.DynamicPropertyFactory[281]-DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6f00d07f
[2018-06-22 22:14:11.454][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-06-22 22:14:11.455][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'tracingFilter' to: [/*]
[2018-06-22 22:14:11.456][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'exceptionLoggingFilter' to: [/*]
[2018-06-22 22:14:11.456][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-06-22 22:14:11.456][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2018-06-22 22:14:11.457][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'requestContextFilter' to: [/*]
[2018-06-22 22:14:11.457][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'httpTraceFilter' to: [/*]
[2018-06-22 22:14:11.457][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.FilterRegistrationBean[244]-Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2018-06-22 22:14:11.457][localhost-startStop-1][INFO ]org.springframework.boot.web.servlet.ServletRegistrationBean[185]-Servlet dispatcherServlet mapped to [/]
[2018-06-22 22:14:11.831][restartedMain][WARN ]com.netflix.config.sources.URLConfigurationSource[121]-No URLs will be polled as dynamic configuration sources.
[2018-06-22 22:14:11.832][restartedMain][INFO ]com.netflix.config.sources.URLConfigurationSource[122]-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2018-06-22 22:14:12.102][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 22:14:12.348][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[574]-Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22b658fa: startup date [Fri Jun 22 22:14:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6393d144
[2018-06-22 22:14:12.547][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/dict/type/list],methods=[GET]}" onto public java.util.List<com.tykj.cloud.api.entity.DictType> com.tykj.cloud.producter.controller.DictTypeController.list()
[2018-06-22 22:14:12.552][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2018-06-22 22:14:12.555][restartedMain][INFO ]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[547]-Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 22:14:12.697][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 22:14:12.698][restartedMain][INFO ]org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[373]-Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2018-06-22 22:14:14.134][restartedMain][WARN ]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[61]-Unable to start LiveReload server
[2018-06-22 22:14:15.235][restartedMain][INFO ]org.springframework.aop.framework.CglibAopProxy[272]-Method [com.netflix.client.config.IClientConfig org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
[2018-06-22 22:14:15.591][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[59]-Exposing 2 endpoint(s) beneath base path '/actuator'
[2018-06-22 22:14:15.614][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 22:14:15.615][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2018-06-22 22:14:15.617][restartedMain][INFO ]org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping[547]-Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2018-06-22 22:14:15.777][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[433]-Registering beans for JMX exposure on startup
[2018-06-22 22:14:15.797][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'environmentManager' has been autodetected for JMX exposure
[2018-06-22 22:14:15.799][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2018-06-22 22:14:15.800][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[895]-Bean with name 'refreshScope' has been autodetected for JMX exposure
[2018-06-22 22:14:15.808][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2018-06-22 22:14:15.824][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2018-06-22 22:14:15.853][restartedMain][INFO ]org.springframework.jmx.export.annotation.AnnotationMBeanExporter[675]-Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=22b658fa,type=ConfigurationPropertiesRebinder]
[2018-06-22 22:14:15.879][restartedMain][INFO ]org.springframework.context.support.DefaultLifecycleProcessor[351]-Starting beans in phase 0
[2018-06-22 22:14:15.901][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.InstanceInfoFactory[71]-Setting initial instance status as: STARTING
[2018-06-22 22:14:15.990][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[349]-Initializing Eureka in region us-east-1
[2018-06-22 22:14:16.632][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[70]-Using JSON encoding codec LegacyJacksonJson
[2018-06-22 22:14:16.633][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[71]-Using JSON decoding codec LegacyJacksonJson
[2018-06-22 22:14:16.863][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[80]-Using XML encoding codec XStreamXml
[2018-06-22 22:14:16.864][restartedMain][INFO ]com.netflix.discovery.provider.DiscoveryJerseyProvider[81]-Using XML decoding codec XStreamXml
[2018-06-22 22:14:17.144][restartedMain][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
[2018-06-22 22:14:17.473][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 22:14:17.474][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 22:14:17.475][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 22:14:17.475][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 22:14:17.476][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 22:14:17.477][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: true
[2018-06-22 22:14:17.477][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 22:14:18.316][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 22:14:18.322][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1264]-Starting heartbeat executor: renew interval is: 30
[2018-06-22 22:14:18.336][restartedMain][INFO ]com.netflix.discovery.InstanceInfoReplicator[60]-InstanceInfoReplicator onDemand update allowed rate per min is 4
[2018-06-22 22:14:18.371][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[449]-Discovery Client initialized at timestamp 1529676858357 with initial instances count: 0
[2018-06-22 22:14:18.483][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry[42]-Registering application cloud-product with eureka with status UP
[2018-06-22 22:14:18.485][restartedMain][INFO ]com.netflix.discovery.DiscoveryClient[1299]-Saw local status change event StatusChangeEvent [timestamp=1529676858485, current=UP, previous=STARTING]
[2018-06-22 22:14:18.510][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[826]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020: registering service...
[2018-06-22 22:14:18.732][restartedMain][INFO ]org.apache.coyote.http11.Http11NioProtocol[180]-Starting ProtocolHandler ["http-nio-8020"]
[2018-06-22 22:14:18.750][restartedMain][INFO ]org.apache.tomcat.util.net.NioSelectorPool[180]-Using a shared selector for servlet write/read
[2018-06-22 22:14:18.949][restartedMain][INFO ]org.springframework.boot.web.embedded.tomcat.TomcatWebServer[206]-Tomcat started on port(s): 8020 (http) with context path ''
[2018-06-22 22:14:18.952][restartedMain][INFO ]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration[124]-Updating port to 8020
[2018-06-22 22:14:18.958][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[59]-Started ProducterApplication in 20.427 seconds (JVM running for 21.61)
[2018-06-22 22:14:18.966][restartedMain][INFO ]com.tykj.cloud.producter.ProducterApplication[24]-Producter Application start successfully------------
[2018-06-22 22:14:19.453][DiscoveryClient-InstanceInfoReplicator-0][INFO ]com.netflix.discovery.DiscoveryClient[835]-DiscoveryClient_CLOUD-PRODUCT/DESKTOP-4PQNN2T:cloud-product:8020 - registration status: 204
[2018-06-22 22:14:48.322][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[958]-Disable delta property : false
[2018-06-22 22:14:48.323][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[959]-Single vip registry refresh property : null
[2018-06-22 22:14:48.323][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[960]-Force full registry fetch : false
[2018-06-22 22:14:48.324][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[961]-Application is null : false
[2018-06-22 22:14:48.324][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[962]-Registered Applications size is zero : true
[2018-06-22 22:14:48.324][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[964]-Application version is -1: false
[2018-06-22 22:14:48.324][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1047]-Getting all instance registry info from the eureka server
[2018-06-22 22:14:48.825][DiscoveryClient-CacheRefreshExecutor-0][INFO ]com.netflix.discovery.DiscoveryClient[1056]-The response status is 200
[2018-06-22 22:14:56.938][http-nio-8020-exec-10][INFO ]org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][180]-Initializing Spring FrameworkServlet 'dispatcherServlet'
[2018-06-22 22:14:56.939][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[494]-FrameworkServlet 'dispatcherServlet': initialization started
[2018-06-22 22:14:57.375][http-nio-8020-exec-10][INFO ]org.springframework.web.servlet.DispatcherServlet[509]-FrameworkServlet 'dispatcherServlet': initialization completed in 435 ms
[2018-06-22 22:14:57.563][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:14:59.989][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:00.637][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:07.848][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:08.391][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:08.605][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:11.672][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:12.087][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:12.288][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:12.413][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7932903b}][INFO ]org.springframework.context.annotation.AnnotationConfigApplicationContext[590]-Refreshing SpringClientFactory-127.0.0.1: startup date [Fri Jun 22 22:15:12 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22b658fa
[2018-06-22 22:15:12.523][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7932903b}][INFO ]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor[154]-JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-06-22 22:15:12.875][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7932903b}][INFO ]com.netflix.config.ChainedDynamicProperty[115]-Flipping property: 127.0.0.1.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2018-06-22 22:15:12.908][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7932903b}][INFO ]com.netflix.util.concurrent.ShutdownEnabledTimer[58]-Shutdown hook installed for: NFLoadBalancer-PingTimer-127.0.0.1
[2018-06-22 22:15:12.957][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7932903b}][INFO ]com.netflix.loadbalancer.BaseLoadBalancer[192]-Client: 127.0.0.1 instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2018-06-22 22:15:12.966][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7932903b}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[222]-Using serverListUpdater PollingServerListUpdater
[2018-06-22 22:15:12.977][AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7932903b}][INFO ]com.netflix.loadbalancer.DynamicServerListLoadBalancer[150]-DynamicServerListLoadBalancer for client 127.0.0.1 initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=127.0.0.1,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@28501c82
[2018-06-22 22:15:49.226][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:52.728][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:53.699][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:54.203][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:54.426][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:54.630][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:54.845][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:55.050][http-nio-8020-exec-2][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:55.212][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:55.403][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:55.596][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:55.821][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:56.004][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:56.223][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:56.400][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:15:56.549][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:03.383][http-nio-8020-exec-4][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:31.966][http-nio-8020-exec-10][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:32.783][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:33.261][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:33.487][http-nio-8020-exec-7][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:33.689][http-nio-8020-exec-6][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:33.860][http-nio-8020-exec-5][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:16:34.041][http-nio-8020-exec-3][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:18:05.281][http-nio-8020-exec-1][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:19:07.069][http-nio-8020-exec-9][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:19:10.144][http-nio-8020-exec-8][INFO ]com.tykj.cloud.api.api.IDictTypeFeign[15]-feign request ----------------------------
[2018-06-22 22:19:17.482][AsyncResolver-bootstrap-executor-0][INFO ]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver[43]-Resolving eureka endpoints via configuration
